{
  "{\"filename\":\"/app/app.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/app.js",
      "filenameRelative": "/app/app.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "app.js",
      "sourceFileName": "app.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "app"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar getFirstMessage = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(psid) {\n    var text, body, object, firstName, lastName;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            text = 'Hey! Great to hear from you.\\n\\nI am going to ask you a few questions and then email a letter to you that can be used to help recover some of your tuition fees.';\n            _context.next = 3;\n            return firstMessage(psid);\n\n          case 3:\n            body = _context.sent;\n            object = JSON.parse(body);\n            firstName = object[\"first_name\"];\n            lastName = object[\"last_name\"];\n\n\n            if (firstName == undefined || lastName == undefined) {\n\n              users[psid].state = states.ask_name;\n              text += '\\n\\nFor some reason I can not access your name. What is your full name?';\n            } else {\n\n              users[psid].state = states.confirm_name;\n              text += \"\\n\\nI have your name as \";\n              text += firstName + \" \" + lastName;\n              text += \", is that right?\";\n              users[psid].first_name = firstName;\n              users[psid].last_name = lastName;\n            }\n            return _context.abrupt(\"return\", text);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getFirstMessage(_x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n/*\n * Starter Project for Messenger Platform Quick Start Tutorial\n *\n * Remix this as the starting point for following the Messenger Platform\n * quick start tutorial.\n *\n * https://developers.facebook.com/docs/messenger-platform/getting-started/quick-start/\n *\n */\n\nvar states = Object.freeze({\n  greeting: 0,\n  ask_name: 1,\n  confirm_name: 2,\n  confirm_goldsmiths_student: 3,\n  warning_non_goldsmiths_student: 4,\n  confirm_student_id: 5,\n  ask_how_many_days: 6,\n  ask_how_much_cost: 7,\n  create_signiture: 8,\n  ask_data_format: 9,\n  send: 10,\n  ask_first_name: 11,\n  ask_last_name: 12,\n  ask_email: 13\n});\n\nvar repeatText = \"Sorry I didn't understand your reply :( I'll repeat my last message to you!\";\n\nString.prototype.levenstein = function (string) {\n  var a = this,\n      b = string + \"\",\n      m = [],\n      i,\n      j,\n      min = Math.min;\n\n  if (!(a && b)) return (b || a).length;\n\n  for (i = 0; i <= b.length; m[i] = [i++]) {}\n  for (j = 0; j <= a.length; m[0][j] = j++) {}\n\n  for (i = 1; i <= b.length; i++) {\n    for (j = 1; j <= a.length; j++) {\n      m[i][j] = b.charAt(i - 1) == a.charAt(j - 1) ? m[i - 1][j - 1] : m[i][j] = min(m[i - 1][j - 1] + 1, min(m[i][j - 1] + 1, m[i - 1][j] + 1));\n    }\n  }\n\n  return m[b.length][a.length];\n};\n\nvar verbose = false;\nvar sigFolder = 'public';\nvar publicURL = 'https://grateful-duckling.glitch.me';\n\n'use strict';\n\n// Imports dependencies and set up http server\n\nvar request = require('request'),\n    express = require('express'),\n    goldsmiths = require('./goldsmiths'),\n    body_parser = require('body-parser'),\n    app = express().use(body_parser.json()); // creates express http server\nvar fs = require('fs');\nvar sh = require('shelljs');\nvar nodemailer = require('nodemailer');\nvar validator = require(\"email-validator\");\n\nvar transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.GMAIL_ADDRESS,\n    pass: process.env.GMAIL_PASSWORD\n  }\n});\n\nvar users;\ntry {\n  readUsers();\n} catch (e) {\n  users = {};\n}\n\nvar PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;\n\n// Sets server port and logs message on success\napp.listen(process.env.PORT || 1337, function () {\n  return console.log('webhook is listening');\n});\n\napp.use(express.static('public'));\n\n// Define the URLs we'll allow.\nvar ALLOWED_BY = new Set(['https://www.messenger.com/', 'https://www.facebook.com/']);\n\napp.get('/iframe', function (req, res) {\n  // Is the URL in the whitelist?\n  // Set X-Frame-Options if so. Otherwise, we won't\n  // set the header and browsers will block it.\n  var domain = String(req.query.domain);\n  if (ALLOWED_BY.has(domain)) {\n    res.setHeader('X-Frame-Options', 'ALLOW-FROM ' + domain);\n  }\n\n  // Send the iframe as usual.\n  res.sendFile('iframe.html');\n});\n\n// Accepts POST requests at /webhook endpoint\napp.post('/webhook', function (req, res) {\n\n  // Parse the request body from the POST\n  var body = req.body;\n\n  // Check the webhook event is from a Page subscription\n  if (body.object === 'page') {\n\n    // Iterate over each entry - there may be multiple if batched\n    body.entry.forEach(function (entry) {\n\n      // Get the webhook event. entry.messaging is an array, but \n      // will only ever contain one event, so we get index 0\n      var webhook_event = entry.messaging[0];\n\n      if (verbose) console.log(webhook_event);\n\n      // Get the sender PSID\n      var sender_psid = webhook_event.sender.id.toString();\n      if (verbose) console.log('Sender PSID: ' + sender_psid);\n      // Check if the event is a message or a postback\n      // Pass the event to the appropraite handler function.\n\n\n      var message = webhook_event.message;\n\n      var invalidStates = [states.confirm_student_id, states.ask_how_many_days, states.ask_how_much_cost, states.ask_first_name, states.ask_last_name, states.ask_email];\n\n      var validState = true;\n      if (users[sender_psid] != undefined) {\n        for (var i = 0; i < invalidStates.length; ++i) {\n          if (users[sender_psid].state == invalidStates[i]) {\n            validState = false;\n            i = invalidStates.length;\n            break;\n          }\n        }\n      }\n\n      if (message) {\n\n        try {\n          if (validState && (message.text.toLowerCase().levenstein('start again') < 2 || message.text.toLowerCase().levenstein('start') < 2 || message.text.toLowerCase().levenstein('hello') < 2 || message.text.toLowerCase().levenstein('hi') < 2 || message.text.toLowerCase().levenstein('hello there') < 2 || message.text.toLowerCase().levenstein('hi there') < 2 || message.text.toLowerCase().levenstein('begin') < 2)) {\n\n            // Set the response based on the postback payload\n            users[sender_psid] = {};\n            getFirstMessage(sender_psid).then(function (t) {\n\n              var response = getYesNoQuickQuestion(t);\n\n              callSendAPI(sender_psid, response);\n            });\n          } else {\n\n            handleMessage(sender_psid, message);\n          }\n        } catch (error) {\n\n          console.log(error);\n        }\n      } else if (webhook_event.postback) {\n        handlePostback(sender_psid, webhook_event.postback);\n      }\n    });\n\n    // Return a '200 OK' response to all events\n    res.status(200).send('EVENT_RECEIVED');\n  } else {\n    // Return a '404 Not Found' if event is not from a page subscription\n    res.sendStatus(404);\n  }\n});\n\n// Accepts GET requests at the /webhook endpoint\napp.get('/webhook', function (req, res) {\n\n  /** UPDATE YOUR VERIFY TOKEN **/\n  var VERIFY_TOKEN = \"superdude\";\n\n  // Parse params from the webhook verification request\n  var mode = req.query['hub.mode'];\n  var token = req.query['hub.verify_token'];\n  var challenge = req.query['hub.challenge'];\n\n  // Check if a token and mode were sent\n  if (mode && token) {\n\n    // Check the mode and token sent are correct\n    if (mode === 'subscribe' && token === VERIFY_TOKEN) {\n\n      // Respond with 200 OK and challenge token from the request\n      console.log('WEBHOOK_VERIFIED');\n      res.status(200).send(challenge);\n    } else {\n      // Responds with '403 Forbidden' if verify tokens do not match\n      res.sendStatus(403);\n    }\n  }\n});\n\n// Handle POST from xxx/receive\napp.post('/receive', function (request, respond) {\n\n  var body = '';\n\n  request.on('data', function (data) {\n    body += data;\n  });\n\n  request.on('end', function () {\n\n    body = JSON.parse(body);\n\n    var psid = body.name;\n\n    if (psid.length > 25) {\n\n      var stop = void 0;\n      for (var i = 0; i < psid.length; ++i) {\n\n        stop = i;\n        if (isNaN(parseInt(psid[i], 10))) {\n          break;\n        }\n      }\n\n      psid = psid.substring(0, stop);\n    }\n\n    var filePath = __dirname + '/' + sigFolder + '/' + (psid + \".png\");\n\n    notifyUserRecivedSignature(psid);\n\n    // Get rid of the image header as we only need the data parts after it.\n    var data = body.data.replace(/^data:image\\/\\w+;base64,/, \"\");\n    // Create a buffer and set its encoding to base64\n    var buf = new Buffer(data, 'base64');\n    // Write\n    fs.writeFile(filePath, buf, function (err) {\n      if (err) throw err;\n      // Respond to client that the canvas image is saved.\n\n      users[psid].signature_exists = true;\n      respond.end();\n    });\n  });\n});\n\nfunction notifyUserRecivedSignature(psid) {\n\n  users[psid].state = states.ask_data_format;\n  var response = {\n\n    text: 'Great, we got your signature! For now I will only support rendering your letter as a PDF - but more features are coming soon! Please select PDF below to continue :)',\n\n    quick_replies: [{\n      content_type: \"text\",\n      title: \"PDF\",\n      payload: \"LATEX_PAYLOAD\"\n    }]\n\n  };\n\n  callSendAPI(psid, response);\n}\n\nfunction handleTextMessage(sender_psid, received_message) {\n\n  var userState = users[sender_psid].state;\n  var text = void 0;\n  var quickReplies = null;\n\n  if (userState == states.ask_name) {\n\n    text = \"Thanks \" + received_message;\n  } else if (userState == states.ask_first_name) {\n\n    text = \"Thanks \" + received_message + \". Now what is your second name?\";\n    users[sender_psid].first_name = received_message;\n    users[sender_psid].state = states.ask_last_name;\n  } else if (userState == states.ask_last_name) {\n\n    text = \"Awesome! Now are you a goldsmiths student?\";\n    users[sender_psid].last_name = received_message;\n\n    quickReplies = [{\n      content_type: \"text\",\n      title: \"Yes\",\n      payload: \"YES_PAYLOAD\"\n    }, {\n      content_type: \"text\",\n      title: \"No\",\n      payload: \"NO_PAYLOAD\"\n    }];\n    users[sender_psid].state = states.confirm_goldsmiths_student;\n  } else if (userState == states.confirm_student_id) {\n\n    users[sender_psid].student_id = received_message;\n\n    users[sender_psid].state = states.ask_email;\n\n    text = \"Thanks. Next I need to know your email address, prefereably your student one so there is an easy contact method in the correspodance I generate for you. To be clear, I will not store, share or ever send you anything via this email address.\\n\\nPlease write your email adress down next.\";\n  } else if (userState == states.ask_how_much_cost) {\n\n    users[sender_psid].tuition_fee = Number(received_message);\n\n    if (!isNaN(users[sender_psid].tuition_fee)) {\n\n      var days = users[sender_psid].amount_days;\n\n      var cost = moneyOwed(users[sender_psid].tuition_fee, days);\n      users[sender_psid].amount_reimburse = cost;\n\n      text = \"Thanks again! Nearly done now :)\\n\\n\" + (\"I calculate that 14 out of your \" + days + \" days at your tuition cost means you should be reinbursed \\xA3\" + cost + \".\\n\\n\") + \"Would you like to add your signature to the correspondance? \" + \"(A pop-up will appear)\";\n      quickReplies = [{\n        content_type: \"text\",\n        title: \"Sounds cool!\",\n        payload: \"YES_PAYLOAD\"\n      }, {\n        content_type: \"text\",\n        title: \"No Thanks\",\n        payload: \"NO_PAYLOAD\"\n      }];\n\n      users[sender_psid].state = states.create_signiture;\n    }\n  } else if (userState == states.ask_how_many_days) {\n\n    users[sender_psid].amount_days = Number(received_message);\n\n    if (!isNaN(users[sender_psid].amount_days)) {\n\n      users[sender_psid].state = states.ask_how_much_cost;\n\n      text = \"Great thanks for that.\\n\\n\" + \"Next, how much is the tution fees for this academic year?\\n\\n\" + \"Select either a custom amount (in GBP £) or the default, £9000.\";\n      quickReplies = [{\n        content_type: \"text\",\n        title: \"Default £9000\",\n        payload: \"DEFAULT_PAYLOAD\"\n      }, {\n        content_type: \"text\",\n        title: \"Custom\",\n        payload: \"CUSTOM_PAYLOAD\"\n      }];\n    }\n  } else if (userState == states.ask_email) {\n\n    users[sender_psid].email_address = received_message;\n\n    if (validator.validate(users[sender_psid].email_address)) {\n\n      users[sender_psid].state = states.ask_how_many_days;\n\n      text = \"We will now need to work out how much you are owed.\\n\\n\" + \"For now, we will work out the \" + \"fraction of tution fee that you have spent not accessing the \" + \"universities facilities during the 14 day strike. Firstly, we \" + \"need to know how many days there are in your academic year. On \" + \"average (and this is a conservative estimate) there are 170.\\n\\n\" + \"Would you like to use the default 170 days or would you like to \" + \"enter a custom amount?\";\n\n      quickReplies = [{\n        content_type: \"text\",\n        title: \"Default\",\n        payload: \"DEFAULT_PAYLOAD\"\n      }, {\n        content_type: \"text\",\n        title: \"Custom\",\n        payload: \"CUSTOM_PAYLOAD\"\n      }];\n    }\n  }\n\n  var response = { text: text };\n\n  if (quickReplies != null) {\n    response.quick_replies = quickReplies;\n  }\n\n  return response;\n}\n\nfunction handleQuickReply(sender_psid, received_reply) {\n\n  var payload = received_reply.payload;\n  var response = void 0;\n\n  if (payload === 'YES_PAYLOAD') {\n\n    if (users[sender_psid].state == states.confirm_name) {\n\n      response = getYesNoQuickQuestion(\"Great, thanks! Now, are you a Goldsmiths student?\");\n\n      users[sender_psid].state = states.confirm_goldsmiths_student;\n    } else if (users[sender_psid].state == states.confirm_goldsmiths_student) {\n\n      response = {\n        \"text\": \"Okay great, thanks! Can you next tell me what your student ID number is?\"\n      };\n\n      users[sender_psid].university = \"goldsmiths\";\n      users[sender_psid].state = states.confirm_student_id;\n    } else if (users[sender_psid].state == states.create_signiture) {\n\n      response = {\n        attachment: {\n          type: \"template\",\n          payload: {\n            template_type: \"button\",\n            text: \"Draw your signiture!\",\n            buttons: [{\n              type: \"web_url\",\n              url: \"https://grateful-duckling.glitch.me?\" + sender_psid,\n              title: \"Start here\",\n              webview_height_ratio: \"tall\",\n              messenger_extensions: \"true\"\n            }]\n          }\n        }\n      };\n    }\n  } else if (payload === 'NO_PAYLOAD') {\n\n    if (users[sender_psid].state == states.confirm_name) {\n\n      response = {\n        text: \"Okay no problem! Please tell me your first name.\"\n      };\n\n      users[sender_psid].state = states.ask_first_name;\n    } else if (users[sender_psid].state == states.confirm_goldsmiths_student) {\n\n      response = {\n        text: \"Okay no problem! Just be aware that this chatbot and the functionality is in an alpha stage with Goldsmiths students in mind, so there may be a few elements that are not currently available to you. If you have feature requests please leave messages on my facebook page! :)\\n\\nOkay next question - what is your student ID number?\"\n      };\n\n      users[sender_psid].university = \"other\";\n      users[sender_psid].state = states.confirm_student_id;\n    } else if (users[sender_psid].state == states.create_signiture) {\n\n      users[sender_psid].signature_exists = false;\n      users[sender_psid].state = states.ask_data_format;\n      response = {\n\n        text: 'No problem! For now I will only support rendering your letter as a PDF - but more features are coming soon! Please select PDF below to continue :)',\n\n        quick_replies: [{\n          content_type: \"text\",\n          title: \"PDF\",\n          payload: \"LATEX_PAYLOAD\"\n        }]\n\n      };\n    }\n  } else if (payload === 'CUSTOM_PAYLOAD') {\n\n    if (users[sender_psid].state == states.ask_how_many_days) {\n      response = {\n        text: \"Please write in numbers how many days you have in your academic year.\"\n      };\n    } else if (users[sender_psid].state == states.ask_how_much_cost) {\n      response = {\n        text: \"Please write in numbers how much in british pound sterling £ your annual tuition fee is.\"\n      };\n    }\n  } else if (payload === 'DEFAULT_PAYLOAD') {\n\n    if (users[sender_psid].state == states.ask_how_many_days) {\n\n      users[sender_psid].amount_days = 170;\n\n      var text = \"Great thanks for that.\\n\\n\" + \"Next, how much is the tution fees for this academic year?\\n\\n\" + \"Select either a custom amount (in GBP £) or the default, £9000.\";\n      var replies = [{\n        content_type: \"text\",\n        title: \"Default £9000\",\n        payload: \"DEFAULT_PAYLOAD\"\n      }, {\n        content_type: \"text\",\n        title: \"Custom\",\n        payload: \"CUSTOM_PAYLOAD\"\n      }];\n      response = getQuickQuestion(text, replies);\n      users[sender_psid].state = states.ask_how_much_cost;\n    } else if (users[sender_psid].state == states.ask_how_much_cost) {\n\n      var tuitionFee = 9000;\n      users[sender_psid].tuition_fee = tuitionFee;\n      var days = users[sender_psid].amount_days;\n\n      var cost = moneyOwed(tuitionFee, days);\n      users[sender_psid].amount_reimburse = cost;\n      // I calculate that 14 out of your ${days} days at your tuition cost means you should be \n      var _text = \"Thanks again! Nearly done now :)\\n\\n\" + (\"I calculate that 14 out of your \" + days + \" days at your tuition cost means you should be reinbursed \\xA3\" + cost + \".\\n\\n\") + \"Signatures can help improve the authenticity of documents. Would you like to add your signature to the generated correspondance? \";\n      var _replies = [{\n        content_type: \"text\",\n        title: \"Yes\",\n        payload: \"YES_PAYLOAD\"\n      }, {\n        content_type: \"text\",\n        title: \"No\",\n        payload: \"NO_PAYLOAD\"\n      }];\n      response = getQuickQuestion(_text, _replies);\n      users[sender_psid].state = states.create_signiture;\n    }\n  } else if (payload === 'LATEX_PAYLOAD') {\n\n    var isGoldsmiths = users[sender_psid].university == \"goldsmiths\";\n\n    // Create the latex file from template and user data.\n    var latexString = goldsmiths.generateLatexFile(sender_psid, users[sender_psid].first_name, users[sender_psid].last_name, users[sender_psid].email_address, users[sender_psid].student_id, users[sender_psid].tuition_fee, users[sender_psid].amount_days, users[sender_psid].amount_reimburse, users[sender_psid].signature_exists, isGoldsmiths);\n\n    fs.writeFile(\"./public/\" + sender_psid + \".tex\", latexString, function (err) {\n      if (err) {\n        return console.log(err);\n      }\n\n      var shell = void 0;\n      if (users[sender_psid].signature_exists) {\n        shell = \"./laton public/\" + sender_psid + \".tex public/\" + sender_psid + \".png && mv \" + sender_psid + \".pdf public/\";\n      } else {\n        shell = \"./laton public/\" + sender_psid + \".tex && mv \" + sender_psid + \".pdf public/\";\n      }\n\n      // Use laton and wait for pdf to exist.\n\n      var _sh$exec = sh.exec(shell, { silent: true }),\n          stdout = _sh$exec.stdout,\n          stderr = _sh$exec.stderr,\n          code = _sh$exec.code;\n\n      var mailOptions = {\n        from: process.env.GMAIL_ADDRESS, // sender address\n        to: users[sender_psid].email_address, // list of receivers\n        subject: 'Your tuition fee reclaimation letter', // Subject line\n        html: '<p>Hi! Please find attached your tuition fee letter. Make sure you send it to the right people!</p>', // plain text body\n        attachments: [{\n          filename: \"letter.pdf\",\n          path: \"public/\" + sender_psid + \".pdf\"\n        }]\n      };\n      // Send as attachment.\n      // Send the HTTP request to the Messenger Platform\n      transporter.sendMail(mailOptions, function (err, info) {\n        if (verbose) console.log(info);\n\n        // Clean up\n        fs.unlink(\"./public/\" + sender_psid + \".pdf\", function (err) {\n          if (verbose) console.log(\"./public/\" + sender_psid + \".pdf was deleted\");\n        });\n        fs.unlink(\"./public/\" + sender_psid + \".tex\", function (err) {\n          if (verbose) console.log(\"./public/\" + sender_psid + \".tex was deleted\");\n        });\n        if (users[sender_psid].signature_exists) {\n          fs.unlink(\"./public/\" + sender_psid + \".png\", function (err) {\n            if (verbose) console.log(\"./public/\" + sender_psid + \".png was deleted\");\n          });\n        }\n      });\n    });\n\n    response = {\n      \"text\": \"Awesome! I'm just generating your document and a link will be sent to the email adress you supplied earlier! If you would like to use my service again, please select 'start again' from the menu below :)\"\n    };\n  }\n  return response;\n}\n\nfunction moneyOwed(tuition_cost, amount_days) {\n\n  var fractionDays = 14 / amount_days;\n  var fractionCost = fractionDays * tuition_cost;\n  return Math.floor(fractionCost);\n}\n\n// Handles messages events\nfunction handleMessage(sender_psid, received_message) {\n\n  var response = void 0;\n\n  // Check if the message is a quick reply.\n  if (received_message.quick_reply) {\n\n    response = handleQuickReply(sender_psid, received_message.quick_reply);\n  } else if (received_message.text) {\n\n    response = handleTextMessage(sender_psid, received_message.text);\n  }\n\n  var isSig = true;\n\n  try {\n    if (response.attachment.payload.text != 'Draw your signiture!') {\n      isSig = false;\n    }\n  } catch (e) {\n    isSig = false;\n  }\n\n  if (response.text == undefined && !isSig) repeatLastmessage(sender_psid);else\n    // Sends the response message\n    callSendAPI(sender_psid, response);\n}\n\n// Handles messaging_postbacks events\nfunction handlePostback(sender_psid, received_postback) {\n\n  var response = void 0;\n\n  // Get the payload for the postback\n  var payload = received_postback.payload;\n\n  // Set the response based on the postback payload\n  if (payload === 'Greeting' || payload == 'START_AGAIN_PAYLOAD') {\n\n    users[sender_psid] = {};\n    getFirstMessage(sender_psid).then(function (t) {\n\n      response = getYesNoQuickQuestion(t);\n\n      callSendAPI(sender_psid, response);\n    });\n  } else if (payload === 'CONTACT_PAYLOAD') {\n\n    var message = users[sender_psid].last_message;\n\n    // Construct the message body\n    var request_body = {\n      recipient: {\n        id: sender_psid\n      },\n      message: { text: contact() }\n\n      // Send the HTTP request to the Messenger Platform\n    };request({\n      uri: \"https://graph.facebook.com/v2.6/me/messages\",\n      qs: { access_token: PAGE_ACCESS_TOKEN },\n      method: \"POST\",\n      json: request_body\n    }, function (err, res, body) {\n      if (!err) {\n        if (verbose) console.log('message sent!');\n\n        callSendAPI(sender_psid, message.response, message.file_data);\n      } else {\n        console.error(\"Unable to send message:\" + err);\n      }\n    });\n  }\n}\n\nfunction writeUsers() {\n  var string = JSON.stringify(users, null, 2);\n  fs.writeFile('db.json', string, 'utf8', function (err) {\n    if (err) console.log(err);\n  });\n}\n\nfunction readUsers() {\n  fs.readFile('db.json', 'utf8', function (err, fileContent) {\n    if (err) {\n      console.log(err);\n    } else {\n      users = JSON.parse(fileContent.toString());\n      if (verbose) console.log(users);\n    }\n  });\n}\n\n// Sends response messages via the Send API\nfunction callSendAPI(sender_psid, response) {\n  var file_data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  // Construct the message body\n  var request_body = {\n    recipient: {\n      id: sender_psid\n    },\n    message: response\n  };\n\n  if (file_data != null) {\n    request_body.filedata = file_data;\n  }\n\n  // Send the HTTP request to the Messenger Platform\n  request({\n    uri: \"https://graph.facebook.com/v2.6/me/messages\",\n    qs: { access_token: PAGE_ACCESS_TOKEN },\n    method: \"POST\",\n    json: request_body\n  }, function (err, res, body) {\n    if (!err) {\n      if (verbose) console.log('message sent!');\n    } else {\n      console.error(\"Unable to send message:\" + err);\n    }\n  });\n\n  // save last message\n  if (response.text != repeatText) {\n    users[sender_psid].last_message = {\n      sender_psid: sender_psid,\n      response: response,\n      file_data: file_data\n    };\n  }\n\n  writeUsers();\n}\n\nfunction repeatLastmessage(sender_psid) {\n\n  if (sender_psid == undefined || users[sender_psid] != undefined) {\n\n    var message = users[sender_psid].last_message;\n\n    // Construct the message body\n    var request_body = {\n      recipient: {\n        id: sender_psid\n      },\n      message: { text: repeatText }\n\n      // Send the HTTP request to the Messenger Platform\n    };request({\n      uri: \"https://graph.facebook.com/v2.6/me/messages\",\n      qs: { access_token: PAGE_ACCESS_TOKEN },\n      method: \"POST\",\n      json: request_body\n    }, function (err, res, body) {\n      if (!err) {\n        if (verbose) console.log('message sent!');\n\n        callSendAPI(sender_psid, message.response, message.file_data);\n      } else {\n        console.error(\"Unable to send message:\" + err);\n      }\n    });\n  } else {\n    users[sender_psid] = {};\n    getFirstMessage(sender_psid).then(function (t) {\n      var response = getYesNoQuickQuestion(t);\n      callSendAPI(sender_psid, response);\n    });\n  }\n}\n\nfunction getYesNoQuickQuestion(question) {\n\n  var replies = [{\n    content_type: \"text\",\n    title: \"Yes\",\n    payload: \"YES_PAYLOAD\"\n  }, {\n    content_type: \"text\",\n    title: \"No\",\n    payload: \"NO_PAYLOAD\"\n  }];\n  return getQuickQuestion(question, replies);\n}\n\nfunction getQuickQuestion(question, replies) {\n  return { text: question, quick_replies: replies };\n}\n\nfunction contact() {\n  var body = 'Thanks for wanting to get in touch! You can email me at leonfedden@gmail.com\\n\\nI will now repeat my last message :)';\n  return body;\n}\n\nfunction firstMessage(psid) {\n\n  var uri = \"https://graph.facebook.com/v2.6/\" + psid;\n  return new Promise(function (resolve) {\n\n    request({\n      uri: uri,\n      qs: {\n        access_token: PAGE_ACCESS_TOKEN,\n        fields: \"first_name,last_name\"\n      },\n      method: \"GET\"\n    }, function (error, res, body) {\n      if (!error) {\n\n        resolve(body);\n      } else {\n        console.error(\"Unable to send message:\" + error);\n        resolve(undefined);\n      }\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "psid",
        "text",
        "firstMessage",
        "body",
        "object",
        "JSON",
        "parse",
        "firstName",
        "lastName",
        "undefined",
        "users",
        "state",
        "states",
        "ask_name",
        "confirm_name",
        "first_name",
        "last_name",
        "getFirstMessage",
        "Object",
        "freeze",
        "greeting",
        "confirm_goldsmiths_student",
        "warning_non_goldsmiths_student",
        "confirm_student_id",
        "ask_how_many_days",
        "ask_how_much_cost",
        "create_signiture",
        "ask_data_format",
        "send",
        "ask_first_name",
        "ask_last_name",
        "ask_email",
        "repeatText",
        "String",
        "prototype",
        "levenstein",
        "string",
        "a",
        "b",
        "m",
        "i",
        "j",
        "min",
        "Math",
        "length",
        "charAt",
        "verbose",
        "sigFolder",
        "publicURL",
        "request",
        "require",
        "express",
        "goldsmiths",
        "body_parser",
        "app",
        "use",
        "json",
        "fs",
        "sh",
        "nodemailer",
        "validator",
        "transporter",
        "createTransport",
        "service",
        "auth",
        "user",
        "process",
        "env",
        "GMAIL_ADDRESS",
        "pass",
        "GMAIL_PASSWORD",
        "readUsers",
        "e",
        "PAGE_ACCESS_TOKEN",
        "listen",
        "PORT",
        "console",
        "log",
        "static",
        "ALLOWED_BY",
        "Set",
        "get",
        "req",
        "res",
        "domain",
        "query",
        "has",
        "setHeader",
        "sendFile",
        "post",
        "entry",
        "forEach",
        "webhook_event",
        "messaging",
        "sender_psid",
        "sender",
        "id",
        "toString",
        "message",
        "invalidStates",
        "validState",
        "toLowerCase",
        "then",
        "response",
        "getYesNoQuickQuestion",
        "t",
        "callSendAPI",
        "handleMessage",
        "error",
        "postback",
        "handlePostback",
        "status",
        "sendStatus",
        "VERIFY_TOKEN",
        "mode",
        "token",
        "challenge",
        "respond",
        "on",
        "data",
        "name",
        "stop",
        "isNaN",
        "parseInt",
        "substring",
        "filePath",
        "__dirname",
        "notifyUserRecivedSignature",
        "replace",
        "buf",
        "Buffer",
        "writeFile",
        "err",
        "signature_exists",
        "end",
        "quick_replies",
        "content_type",
        "title",
        "payload",
        "handleTextMessage",
        "received_message",
        "userState",
        "quickReplies",
        "student_id",
        "tuition_fee",
        "Number",
        "days",
        "amount_days",
        "cost",
        "moneyOwed",
        "amount_reimburse",
        "email_address",
        "validate",
        "handleQuickReply",
        "received_reply",
        "university",
        "attachment",
        "type",
        "template_type",
        "buttons",
        "url",
        "webview_height_ratio",
        "messenger_extensions",
        "replies",
        "getQuickQuestion",
        "tuitionFee",
        "isGoldsmiths",
        "latexString",
        "generateLatexFile",
        "shell",
        "exec",
        "silent",
        "stdout",
        "stderr",
        "code",
        "mailOptions",
        "from",
        "to",
        "subject",
        "html",
        "attachments",
        "filename",
        "path",
        "sendMail",
        "info",
        "unlink",
        "tuition_cost",
        "fractionDays",
        "fractionCost",
        "floor",
        "quick_reply",
        "isSig",
        "repeatLastmessage",
        "received_postback",
        "last_message",
        "request_body",
        "recipient",
        "contact",
        "uri",
        "qs",
        "access_token",
        "method",
        "file_data",
        "writeUsers",
        "stringify",
        "readFile",
        "fileContent",
        "filedata",
        "question",
        "Promise",
        "resolve",
        "fields"
      ],
      "mappings": ";;;qEA83BA,iBAA+BA,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBADN,GACa,kKADb;AAAA;AAAA,mBAEmBC,aAAaF,IAAb,CAFnB;;AAAA;AAEMG,gBAFN;AAGMC,kBAHN,GAGeC,KAAKC,KAAL,CAAWH,IAAX,CAHf;AAIMI,qBAJN,GAIkBH,OAAO,YAAP,CAJlB;AAKMI,oBALN,GAKiBJ,OAAO,WAAP,CALjB;;;AAOE,gBAAIG,aAAaE,SAAb,IAA0BD,YAAYC,SAA1C,EAAqD;;AAEnDC,oBAAMV,IAAN,EAAYW,KAAZ,GAAoBC,OAAOC,QAA3B;AACAZ,sBAAQ,yEAAR;AACD,aAJD,MAIO;;AAELS,oBAAMV,IAAN,EAAYW,KAAZ,GAAoBC,OAAOE,YAA3B;AACAb,sBAAQ,0BAAR;AACAA,sBAASM,YAAY,GAAZ,GAAkBC,QAA3B;AACAP,sBAAQ,kBAAR;AACAS,oBAAMV,IAAN,EAAYe,UAAZ,GAAyBR,SAAzB;AACAG,oBAAMV,IAAN,EAAYgB,SAAZ,GAAwBR,QAAxB;AACD;AAnBH,6CAoBSP,IApBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAegB,e;;;;;;;AA93Bf;;;;;;;;;;AAYA,IAAIL,SAASM,OAAOC,MAAP,CAAc;AACzBC,YAAU,CADe;AAEzBP,YAAU,CAFe;AAGzBC,gBAAc,CAHW;AAIzBO,8BAA4B,CAJH;AAKzBC,kCAAgC,CALP;AAMzBC,sBAAoB,CANK;AAOzBC,qBAAmB,CAPM;AAQzBC,qBAAmB,CARM;AASzBC,oBAAkB,CATO;AAUzBC,mBAAiB,CAVQ;AAWzBC,QAAM,EAXmB;AAYzBC,kBAAgB,EAZS;AAazBC,iBAAe,EAbU;AAczBC,aAAW;AAdc,CAAd,CAAb;;AAiBA,IAAMC,aAAa,6EAAnB;;AAEAC,OAAOC,SAAP,CAAiBC,UAAjB,GAA8B,UAASC,MAAT,EAAiB;AAC3C,MAAIC,IAAI,IAAR;AAAA,MAAcC,IAAIF,SAAS,EAA3B;AAAA,MAA+BG,IAAI,EAAnC;AAAA,MAAuCC,CAAvC;AAAA,MAA0CC,CAA1C;AAAA,MAA6CC,MAAMC,KAAKD,GAAxD;;AAEA,MAAI,EAAEL,KAAKC,CAAP,CAAJ,EAAe,OAAO,CAACA,KAAKD,CAAN,EAASO,MAAhB;;AAEf,OAAKJ,IAAI,CAAT,EAAYA,KAAKF,EAAEM,MAAnB,EAA2BL,EAAEC,CAAF,IAAO,CAACA,GAAD,CAAlC;AACA,OAAKC,IAAI,CAAT,EAAYA,KAAKJ,EAAEO,MAAnB,EAA2BL,EAAE,CAAF,EAAKE,CAAL,IAAUA,GAArC;;AAEA,OAAKD,IAAI,CAAT,EAAYA,KAAKF,EAAEM,MAAnB,EAA2BJ,GAA3B,EAAgC;AAC5B,SAAKC,IAAI,CAAT,EAAYA,KAAKJ,EAAEO,MAAnB,EAA2BH,GAA3B,EAAgC;AAC5BF,QAAEC,CAAF,EAAKC,CAAL,IAAUH,EAAEO,MAAF,CAASL,IAAI,CAAb,KAAmBH,EAAEQ,MAAF,CAASJ,IAAI,CAAb,CAAnB,GACJF,EAAEC,IAAI,CAAN,EAASC,IAAI,CAAb,CADI,GAEJF,EAAEC,CAAF,EAAKC,CAAL,IAAUC,IACRH,EAAEC,IAAI,CAAN,EAASC,IAAI,CAAb,IAAkB,CADV,EAERC,IAAIH,EAAEC,CAAF,EAAKC,IAAI,CAAT,IAAc,CAAlB,EAAqBF,EAAEC,IAAI,CAAN,EAAUC,CAAV,IAAe,CAApC,CAFQ,CAFhB;AAKH;AACJ;;AAED,SAAOF,EAAED,EAAEM,MAAJ,EAAYP,EAAEO,MAAd,CAAP;AACH,CAnBD;;AAqBA,IAAME,UAAU,KAAhB;AACA,IAAMC,YAAY,QAAlB;AACA,IAAMC,YAAY,qCAAlB;;AAEA;;AAEA;;AAEA,IACEC,UAAUC,QAAQ,SAAR,CADZ;AAAA,IAEEC,UAAUD,QAAQ,SAAR,CAFZ;AAAA,IAGEE,aAAaF,QAAQ,cAAR,CAHf;AAAA,IAIEG,cAAcH,QAAQ,aAAR,CAJhB;AAAA,IAKEI,MAAMH,UAAUI,GAAV,CAAcF,YAAYG,IAAZ,EAAd,CALR,C,CAK2C;AAC3C,IAAMC,KAAKP,QAAQ,IAAR,CAAX;AACA,IAAIQ,KAAKR,QAAQ,SAAR,CAAT;AACA,IAAIS,aAAaT,QAAQ,YAAR,CAAjB;AACA,IAAIU,YAAYV,QAAQ,iBAAR,CAAhB;;AAEA,IAAIW,cAAcF,WAAWG,eAAX,CAA2B;AAC5CC,WAAS,OADmC;AAE5CC,QAAM;AACCC,UAAMC,QAAQC,GAAR,CAAYC,aADnB;AAECC,UAAMH,QAAQC,GAAR,CAAYG;AAFnB;AAFsC,CAA3B,CAAlB;;AAQA,IAAI5D,KAAJ;AACA,IAAI;AACF6D;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;AACV9D,UAAQ,EAAR;AACD;;AAED,IAAM+D,oBAAoBP,QAAQC,GAAR,CAAYM,iBAAtC;;AAEA;AACAnB,IAAIoB,MAAJ,CAAWR,QAAQC,GAAR,CAAYQ,IAAZ,IAAoB,IAA/B,EAAqC;AAAA,SAAMC,QAAQC,GAAR,CAAY,sBAAZ,CAAN;AAAA,CAArC;;AAEAvB,IAAIC,GAAJ,CAAQJ,QAAQ2B,MAAR,CAAe,QAAf,CAAR;;AAEA;AACA,IAAIC,aAAa,IAAIC,GAAJ,CAAQ,CACvB,4BADuB,EAEvB,2BAFuB,CAAR,CAAjB;;AAKA1B,IAAI2B,GAAJ,CAAQ,SAAR,EAAmB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACrC;AACA;AACA;AACA,MAAIC,SAASnD,OAAOiD,IAAIG,KAAJ,CAAUD,MAAjB,CAAb;AACA,MAAIL,WAAWO,GAAX,CAAeF,MAAf,CAAJ,EAA4B;AAC1BD,QAAII,SAAJ,CAAc,iBAAd,EAAiC,gBAAgBH,MAAjD;AACD;;AAED;AACAD,MAAIK,QAAJ,CAAa,aAAb;AACD,CAXD;;AAaA;AACAlC,IAAImC,IAAJ,CAAS,UAAT,EAAqB,UAACP,GAAD,EAAMC,GAAN,EAAc;;AAEjC;AACA,MAAIhF,OAAO+E,IAAI/E,IAAf;;AAEA;AACA,MAAIA,KAAKC,MAAL,KAAgB,MAApB,EAA4B;;AAE1B;AACAD,SAAKuF,KAAL,CAAWC,OAAX,CAAmB,UAASD,KAAT,EAAgB;;AAEjC;AACA;AACA,UAAIE,gBAAgBF,MAAMG,SAAN,CAAgB,CAAhB,CAApB;;AAEA,UAAI/C,OAAJ,EAAa8B,QAAQC,GAAR,CAAYe,aAAZ;;AAEb;AACA,UAAIE,cAAcF,cAAcG,MAAd,CAAqBC,EAArB,CAAwBC,QAAxB,EAAlB;AACA,UAAInD,OAAJ,EAAa8B,QAAQC,GAAR,CAAY,kBAAkBiB,WAA9B;AACb;AACA;;;AAGA,UAAMI,UAAUN,cAAcM,OAA9B;;AAEA,UAAMC,gBAAgB,CACpBvF,OAAOW,kBADa,EAEpBX,OAAOY,iBAFa,EAGpBZ,OAAOa,iBAHa,EAIpBb,OAAOiB,cAJa,EAKpBjB,OAAOkB,aALa,EAMpBlB,OAAOmB,SANa,CAAtB;;AASA,UAAIqE,aAAa,IAAjB;AACA,UAAI1F,MAAMoF,WAAN,KAAsBrF,SAA1B,EAAqC;AACnC,aAAK,IAAI+B,IAAI,CAAb,EAAgBA,IAAI2D,cAAcvD,MAAlC,EAA0C,EAAEJ,CAA5C,EAA+C;AAC7C,cAAI9B,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BwF,cAAc3D,CAAd,CAAhC,EAAkD;AAChD4D,yBAAa,KAAb;AACA5D,gBAAI2D,cAAcvD,MAAlB;AACA;AACD;AACF;AACF;;AAED,UAAIsD,OAAJ,EAAa;;AAEX,YAAI;AACF,cAAIE,eACAF,QAAQjG,IAAR,CAAaoG,WAAb,GAA2BlE,UAA3B,CAAsC,aAAtC,IAAuD,CAAvD,IACA+D,QAAQjG,IAAR,CAAaoG,WAAb,GAA2BlE,UAA3B,CAAsC,OAAtC,IAAiD,CADjD,IAEA+D,QAAQjG,IAAR,CAAaoG,WAAb,GAA2BlE,UAA3B,CAAsC,OAAtC,IAAiD,CAFjD,IAGA+D,QAAQjG,IAAR,CAAaoG,WAAb,GAA2BlE,UAA3B,CAAsC,IAAtC,IAA8C,CAH9C,IAIA+D,QAAQjG,IAAR,CAAaoG,WAAb,GAA2BlE,UAA3B,CAAsC,aAAtC,IAAuD,CAJvD,IAKA+D,QAAQjG,IAAR,CAAaoG,WAAb,GAA2BlE,UAA3B,CAAsC,UAAtC,IAAoD,CALpD,IAMA+D,QAAQjG,IAAR,CAAaoG,WAAb,GAA2BlE,UAA3B,CAAsC,OAAtC,IAAiD,CAPjD,CAAJ,EAOyD;;AAEvD;AACAzB,kBAAMoF,WAAN,IAAqB,EAArB;AACA7E,4BAAgB6E,WAAhB,EAA6BQ,IAA7B,CAAkC,aAAK;;AAErC,kBAAMC,WAAWC,sBAAsBC,CAAtB,CAAjB;;AAEAC,0BAAYZ,WAAZ,EAAyBS,QAAzB;AACD,aALD;AAOD,WAlBD,MAkBO;;AAELI,0BAAcb,WAAd,EAA2BI,OAA3B;AACD;AAEF,SAxBD,CAwBE,OAAOU,KAAP,EAAc;;AAEdhC,kBAAQC,GAAR,CAAY+B,KAAZ;AACD;AAEF,OA/BD,MA+BO,IAAIhB,cAAciB,QAAlB,EAA4B;AACjCC,uBAAehB,WAAf,EAA4BF,cAAciB,QAA1C;AACD;AACF,KAvED;;AAyEA;AACA1B,QAAI4B,MAAJ,CAAW,GAAX,EAAgBnF,IAAhB,CAAqB,gBAArB;AAED,GA/ED,MA+EO;AACL;AACAuD,QAAI6B,UAAJ,CAAe,GAAf;AACD;AAEF,CA1FD;;AA4FA;AACA1D,IAAI2B,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;;AAEhC;AACA,MAAM8B,eAAe,WAArB;;AAEA;AACA,MAAIC,OAAOhC,IAAIG,KAAJ,CAAU,UAAV,CAAX;AACA,MAAI8B,QAAQjC,IAAIG,KAAJ,CAAU,kBAAV,CAAZ;AACA,MAAI+B,YAAYlC,IAAIG,KAAJ,CAAU,eAAV,CAAhB;;AAEA;AACA,MAAI6B,QAAQC,KAAZ,EAAmB;;AAEjB;AACA,QAAID,SAAS,WAAT,IAAwBC,UAAUF,YAAtC,EAAoD;;AAElD;AACArC,cAAQC,GAAR,CAAY,kBAAZ;AACAM,UAAI4B,MAAJ,CAAW,GAAX,EAAgBnF,IAAhB,CAAqBwF,SAArB;AAED,KAND,MAMO;AACL;AACAjC,UAAI6B,UAAJ,CAAe,GAAf;AACD;AACF;AACF,CAzBD;;AA4BA;AACA1D,IAAImC,IAAJ,CAAS,UAAT,EAAqB,UAASxC,OAAT,EAAkBoE,OAAlB,EAA2B;;AAE9C,MAAIlH,OAAO,EAAX;;AAEA8C,UAAQqE,EAAR,CAAW,MAAX,EAAmB,UAASC,IAAT,EAAe;AAChCpH,YAAQoH,IAAR;AACD,GAFD;;AAIAtE,UAAQqE,EAAR,CAAW,KAAX,EAAkB,YAAW;;AAE3BnH,WAAOE,KAAKC,KAAL,CAAWH,IAAX,CAAP;;AAEA,QAAIH,OAAOG,KAAKqH,IAAhB;;AAEA,QAAIxH,KAAK4C,MAAL,GAAc,EAAlB,EAAsB;;AAEpB,UAAI6E,aAAJ;AACA,WAAK,IAAIjF,IAAI,CAAb,EAAgBA,IAAIxC,KAAK4C,MAAzB,EAAiC,EAAEJ,CAAnC,EAAsC;;AAEpCiF,eAAOjF,CAAP;AACA,YAAIkF,MAAMC,SAAS3H,KAAKwC,CAAL,CAAT,EAAkB,EAAlB,CAAN,CAAJ,EAAkC;AAChC;AACD;AACF;;AAEDxC,aAAOA,KAAK4H,SAAL,CAAe,CAAf,EAAkBH,IAAlB,CAAP;AACD;;AAED,QAAMI,WAAWC,YAAY,GAAZ,GAAkB/E,SAAlB,GAA8B,GAA9B,IAAuC/C,IAAvC,UAAjB;;AAEA+H,+BAA2B/H,IAA3B;;AAEA;AACA,QAAMuH,OAAOpH,KAAKoH,IAAL,CAAUS,OAAV,CAAkB,0BAAlB,EAA8C,EAA9C,CAAb;AACA;AACA,QAAIC,MAAM,IAAIC,MAAJ,CAAWX,IAAX,EAAiB,QAAjB,CAAV;AACA;AACA9D,OAAG0E,SAAH,CAAaN,QAAb,EAAuBI,GAAvB,EAA4B,UAASG,GAAT,EAAa;AACvC,UAAIA,GAAJ,EAAS,MAAMA,GAAN;AACT;;AAEA1H,YAAMV,IAAN,EAAYqI,gBAAZ,GAA+B,IAA/B;AACAhB,cAAQiB,GAAR;AACD,KAND;AAOD,GApCD;AAqCD,CA7CD;;AA+CA,SAASP,0BAAT,CAAoC/H,IAApC,EAA0C;;AAExCU,QAAMV,IAAN,EAAYW,KAAZ,GAAoBC,OAAOe,eAA3B;AACA,MAAM4E,WAAW;;AAEftG,UAAM,sKAFS;;AAIfsI,mBAAe,CACb;AACEC,oBAAc,MADhB;AAEEC,aAAO,KAFT;AAGEC,eAAS;AAHX,KADa;;AAJA,GAAjB;;AAcAhC,cAAY1G,IAAZ,EAAkBuG,QAAlB;AACD;;AAWD,SAASoC,iBAAT,CAA2B7C,WAA3B,EAAwC8C,gBAAxC,EAA0D;;AAExD,MAAIC,YAAYnI,MAAMoF,WAAN,EAAmBnF,KAAnC;AACA,MAAIV,aAAJ;AACA,MAAI6I,eAAe,IAAnB;;AAEA,MAAID,aAAajI,OAAOC,QAAxB,EAAkC;;AAEhCZ,WAAO,YAAY2I,gBAAnB;AAED,GAJD,MAIO,IAAIC,aAAajI,OAAOiB,cAAxB,EAAwC;;AAE7C5B,WAAO,YAAY2I,gBAAZ,GAA+B,iCAAtC;AACAlI,UAAMoF,WAAN,EAAmB/E,UAAnB,GAAgC6H,gBAAhC;AACAlI,UAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOkB,aAAlC;AAED,GANM,MAMA,IAAI+G,aAAajI,OAAOkB,aAAxB,EAAuC;;AAE5C7B,WAAO,4CAAP;AACAS,UAAMoF,WAAN,EAAmB9E,SAAnB,GAA+B4H,gBAA/B;;AAEAE,mBAAe,CACb;AACEN,oBAAc,MADhB;AAEEC,aAAO,KAFT;AAGEC,eAAS;AAHX,KADa,EAMb;AACEF,oBAAc,MADhB;AAEEC,aAAO,IAFT;AAGEC,eAAS;AAHX,KANa,CAAf;AAYAhI,UAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOS,0BAAlC;AAED,GAnBM,MAmBA,IAAIwH,aAAajI,OAAOW,kBAAxB,EAA4C;;AAEjDb,UAAMoF,WAAN,EAAmBiD,UAAnB,GAAgCH,gBAAhC;;AAEAlI,UAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOmB,SAAlC;;AAEA9B;AAED,GARM,MAQA,IAAI4I,aAAajI,OAAOa,iBAAxB,EAA2C;;AAEhDf,UAAMoF,WAAN,EAAmBkD,WAAnB,GAAiCC,OAAOL,gBAAP,CAAjC;;AAEA,QAAI,CAAClB,MAAMhH,MAAMoF,WAAN,EAAmBkD,WAAzB,CAAL,EAA4C;;AAE1C,UAAME,OAAOxI,MAAMoF,WAAN,EAAmBqD,WAAhC;;AAEA,UAAMC,OAAOC,UAAU3I,MAAMoF,WAAN,EAAmBkD,WAA7B,EAA0CE,IAA1C,CAAb;AACAxI,YAAMoF,WAAN,EAAmBwD,gBAAnB,GAAsCF,IAAtC;;AAEAnJ,aAAO,+EACmCiJ,IADnC,sEACqGE,IADrG,uGAAP;AAIAN,qBAAe,CACb;AACEN,sBAAc,MADhB;AAEEC,eAAO,cAFT;AAGEC,iBAAS;AAHX,OADa,EAMb;AACEF,sBAAc,MADhB;AAEEC,eAAO,WAFT;AAGEC,iBAAS;AAHX,OANa,CAAf;;AAaAhI,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOc,gBAAlC;AACD;AAEF,GA/BM,MA+BA,IAAImH,aAAajI,OAAOY,iBAAxB,EAA2C;;AAEhDd,UAAMoF,WAAN,EAAmBqD,WAAnB,GAAiCF,OAAOL,gBAAP,CAAjC;;AAEA,QAAI,CAAClB,MAAMhH,MAAMoF,WAAN,EAAmBqD,WAAzB,CAAL,EAA4C;;AAE1CzI,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOa,iBAAlC;;AAEAxB,aAAO,+BACA,+DADA,GAEA,iEAFP;AAGA6I,qBAAe,CACb;AACEN,sBAAc,MADhB;AAEEC,eAAO,eAFT;AAGEC,iBAAS;AAHX,OADa,EAMb;AACEF,sBAAc,MADhB;AAEEC,eAAO,QAFT;AAGEC,iBAAS;AAHX,OANa,CAAf;AAYD;AACF,GAxBM,MAwBA,IAAIG,aAAajI,OAAOmB,SAAxB,EAAmC;;AAExCrB,UAAMoF,WAAN,EAAmByD,aAAnB,GAAmCX,gBAAnC;;AAEA,QAAIhF,UAAU4F,QAAV,CAAmB9I,MAAMoF,WAAN,EAAmByD,aAAtC,CAAJ,EAA0D;;AAExD7I,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOY,iBAAlC;;AAEAvB,aAAO,0cAAP;;AASA6I,qBAAe,CACb;AACEN,sBAAc,MADhB;AAEEC,eAAO,SAFT;AAGEC,iBAAS;AAHX,OADa,EAMb;AACEF,sBAAc,MADhB;AAEEC,eAAO,QAFT;AAGEC,iBAAS;AAHX,OANa,CAAf;AAYD;AACF;;AAED,MAAInC,WAAW,EAAEtG,MAAMA,IAAR,EAAf;;AAEA,MAAI6I,gBAAgB,IAApB,EAA0B;AACxBvC,aAASgC,aAAT,GAAyBO,YAAzB;AACD;;AAED,SAAOvC,QAAP;AACD;;AAGD,SAASkD,gBAAT,CAA0B3D,WAA1B,EAAuC4D,cAAvC,EAAuD;;AAErD,MAAIhB,UAAUgB,eAAehB,OAA7B;AACA,MAAInC,iBAAJ;;AAEA,MAAImC,YAAY,aAAhB,EAA+B;;AAE7B,QAAIhI,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOE,YAAvC,EAAqD;;AAEnDyF,iBAAWC,sBAAsB,mDAAtB,CAAX;;AAEA9F,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOS,0BAAlC;AAED,KAND,MAMO,IAAIX,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOS,0BAAvC,EAAmE;;AAExEkF,iBAAW;AACT,gBAAQ;AADC,OAAX;;AAIA7F,YAAMoF,WAAN,EAAmB6D,UAAnB,GAAgC,YAAhC;AACAjJ,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOW,kBAAlC;AAED,KATM,MASA,IAAIb,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOc,gBAAvC,EAAyD;;AAE9D6E,iBAAW;AACTqD,oBAAY;AACVC,gBAAM,UADI;AAEVnB,mBAAS;AACPoB,2BAAe,QADR;AAEP7J,kBAAM,sBAFC;AAGP8J,qBAAS,CACP;AACEF,oBAAM,SADR;AAEEG,4DAA4ClE,WAF9C;AAGE2C,qBAAO,YAHT;AAIEwB,oCAAsB,MAJxB;AAKEC,oCAAsB;AALxB,aADO;AAHF;AAFC;AADH,OAAX;AAkBD;AAEF,GAvCD,MAuCO,IAAIxB,YAAY,YAAhB,EAA8B;;AAEnC,QAAIhI,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOE,YAAvC,EAAqD;;AAEnDyF,iBAAW;AACTtG,cAAM;AADG,OAAX;;AAIAS,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOiB,cAAlC;AAED,KARD,MAQO,IAAInB,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOS,0BAAvC,EAAmE;;AAExEkF,iBAAW;AACTtG,cAAM;AADG,OAAX;;AAIAS,YAAMoF,WAAN,EAAmB6D,UAAnB,GAAgC,OAAhC;AACAjJ,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOW,kBAAlC;AAED,KATM,MASA,IAAIb,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOc,gBAAvC,EAAyD;;AAE9DhB,YAAMoF,WAAN,EAAmBuC,gBAAnB,GAAsC,KAAtC;AACA3H,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOe,eAAlC;AACA4E,iBAAW;;AAETtG,cAAM,oJAFG;;AAITsI,uBAAe,CACb;AACEC,wBAAc,MADhB;AAEEC,iBAAO,KAFT;AAGEC,mBAAS;AAHX,SADa;;AAJN,OAAX;AAcD;AAEF,GAvCM,MAuCA,IAAIA,YAAY,gBAAhB,EAAkC;;AAEvC,QAAIhI,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOY,iBAAvC,EAA0D;AACxD+E,iBAAW;AACTtG,cAAM;AADG,OAAX;AAID,KALD,MAKO,IAAIS,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOa,iBAAvC,EAA0D;AAC/D8E,iBAAW;AACTtG,cAAM;AADG,OAAX;AAID;AAEF,GAdM,MAcA,IAAIyI,YAAY,iBAAhB,EAAmC;;AAExC,QAAIhI,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOY,iBAAvC,EAA0D;;AAExDd,YAAMoF,WAAN,EAAmBqD,WAAnB,GAAiC,GAAjC;;AAEA,UAAIlJ,OAAO,+BACA,+DADA,GAEA,iEAFX;AAGA,UAAIkK,UAAU,CACZ;AACE3B,sBAAc,MADhB;AAEEC,eAAO,eAFT;AAGEC,iBAAS;AAHX,OADY,EAMZ;AACEF,sBAAc,MADhB;AAEEC,eAAO,QAFT;AAGEC,iBAAS;AAHX,OANY,CAAd;AAYAnC,iBAAW6D,iBAAiBnK,IAAjB,EAAuBkK,OAAvB,CAAX;AACAzJ,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOa,iBAAlC;AAED,KAtBD,MAsBO,IAAIf,MAAMoF,WAAN,EAAmBnF,KAAnB,IAA4BC,OAAOa,iBAAvC,EAA0D;;AAE/D,UAAM4I,aAAa,IAAnB;AACA3J,YAAMoF,WAAN,EAAmBkD,WAAnB,GAAiCqB,UAAjC;AACA,UAAMnB,OAAOxI,MAAMoF,WAAN,EAAmBqD,WAAhC;;AAEA,UAAMC,OAAOC,UAAUgB,UAAV,EAAsBnB,IAAtB,CAAb;AACAxI,YAAMoF,WAAN,EAAmBwD,gBAAnB,GAAsCF,IAAtC;AACA;AACA,UAAInJ,QAAO,+EACmCiJ,IADnC,sEACqGE,IADrG,iJAAX;AAGA,UAAIe,WAAU,CACZ;AACE3B,sBAAc,MADhB;AAEEC,eAAO,KAFT;AAGEC,iBAAS;AAHX,OADY,EAMZ;AACEF,sBAAc,MADhB;AAEEC,eAAO,IAFT;AAGEC,iBAAS;AAHX,OANY,CAAd;AAYAnC,iBAAW6D,iBAAiBnK,KAAjB,EAAuBkK,QAAvB,CAAX;AACAzJ,YAAMoF,WAAN,EAAmBnF,KAAnB,GAA2BC,OAAOc,gBAAlC;AAED;AACF,GApDM,MAoDA,IAAIgH,YAAY,eAAhB,EAAiC;;AAEtC,QAAM4B,eAAe5J,MAAMoF,WAAN,EAAmB6D,UAAnB,IAAiC,YAAtD;;AAEA;AACA,QAAMY,cAAcnH,WAAWoH,iBAAX,CAA6B1E,WAA7B,EAC6BpF,MAAMoF,WAAN,EAAmB/E,UADhD,EAE6BL,MAAMoF,WAAN,EAAmB9E,SAFhD,EAG6BN,MAAMoF,WAAN,EAAmByD,aAHhD,EAI6B7I,MAAMoF,WAAN,EAAmBiD,UAJhD,EAK6BrI,MAAMoF,WAAN,EAAmBkD,WALhD,EAM6BtI,MAAMoF,WAAN,EAAmBqD,WANhD,EAO6BzI,MAAMoF,WAAN,EAAmBwD,gBAPhD,EAQ6B5I,MAAMoF,WAAN,EAAmBuC,gBARhD,EAS6BiC,YAT7B,CAApB;;AAWA7G,OAAG0E,SAAH,eAAyBrC,WAAzB,WAA4CyE,WAA5C,EAAyD,UAASnC,GAAT,EAAc;AACrE,UAAIA,GAAJ,EAAS;AACP,eAAOxD,QAAQC,GAAR,CAAYuD,GAAZ,CAAP;AACD;;AAED,UAAIqC,cAAJ;AACA,UAAI/J,MAAMoF,WAAN,EAAmBuC,gBAAvB,EAAyC;AACvCoC,oCAA0B3E,WAA1B,oBAAoDA,WAApD,mBAA6EA,WAA7E;AACD,OAFD,MAEO;AACL2E,oCAA0B3E,WAA1B,mBAAmDA,WAAnD;AACD;;AAED;;AAZqE,qBAapCpC,GAAGgH,IAAH,CAAQD,KAAR,EAAe,EAAEE,QAAQ,IAAV,EAAf,CAboC;AAAA,UAa7DC,MAb6D,YAa7DA,MAb6D;AAAA,UAarDC,MAbqD,YAarDA,MAbqD;AAAA,UAa7CC,IAb6C,YAa7CA,IAb6C;;AAerE,UAAMC,cAAc;AAClBC,cAAM9G,QAAQC,GAAR,CAAYC,aADA,EACe;AACjC6G,YAAIvK,MAAMoF,WAAN,EAAmByD,aAFL,EAEoB;AACtC2B,iBAAS,sCAHS,EAG+B;AACjDC,cAAM,qGAJY,EAI0F;AAC5GC,qBAAa,CAAC;AACZC,oBAAU,YADE;AAEZC,4BAAgBxF,WAAhB;AAFY,SAAD;AALK,OAApB;AAUA;AACA;AACAjC,kBAAY0H,QAAZ,CAAqBR,WAArB,EAAkC,UAAU3C,GAAV,EAAeoD,IAAf,EAAqB;AACrD,YAAI1I,OAAJ,EACE8B,QAAQC,GAAR,CAAY2G,IAAZ;;AAEF;AACA/H,WAAGgI,MAAH,eAAsB3F,WAAtB,WAAyC,UAACsC,GAAD,EAAS;AAChD,cAAItF,OAAJ,EACE8B,QAAQC,GAAR,eAAwBiB,WAAxB;AACH,SAHD;AAIArC,WAAGgI,MAAH,eAAsB3F,WAAtB,WAAyC,UAACsC,GAAD,EAAS;AAChD,cAAItF,OAAJ,EACE8B,QAAQC,GAAR,eAAwBiB,WAAxB;AACH,SAHD;AAIA,YAAIpF,MAAMoF,WAAN,EAAmBuC,gBAAvB,EAAyC;AACvC5E,aAAGgI,MAAH,eAAsB3F,WAAtB,WAAyC,UAACsC,GAAD,EAAS;AAChD,gBAAItF,OAAJ,EACE8B,QAAQC,GAAR,eAAwBiB,WAAxB;AACH,WAHD;AAID;AACF,OAnBD;AAqBD,KAhDD;;AAkDAS,eAAW;AACP,cAAQ;AADD,KAAX;AAGD;AACD,SAAOA,QAAP;AACD;;AAED,SAAS8C,SAAT,CAAmBqC,YAAnB,EAAiCvC,WAAjC,EAA8C;;AAE5C,MAAMwC,eAAe,KAAKxC,WAA1B;AACA,MAAMyC,eAAeD,eAAeD,YAApC;AACA,SAAO/I,KAAKkJ,KAAL,CAAWD,YAAX,CAAP;AACD;;AAED;AACA,SAASjF,aAAT,CAAuBb,WAAvB,EAAoC8C,gBAApC,EAAsD;;AAEpD,MAAIrC,iBAAJ;;AAEA;AACA,MAAIqC,iBAAiBkD,WAArB,EAAkC;;AAEhCvF,eAAWkD,iBAAiB3D,WAAjB,EAA8B8C,iBAAiBkD,WAA/C,CAAX;AAED,GAJD,MAIQ,IAAIlD,iBAAiB3I,IAArB,EAA2B;;AAEjCsG,eAAWoC,kBAAkB7C,WAAlB,EAA+B8C,iBAAiB3I,IAAhD,CAAX;AACD;;AAED,MAAI8L,QAAQ,IAAZ;;AAEA,MAAI;AACF,QAAIxF,SAASqD,UAAT,CAAoBlB,OAApB,CAA4BzI,IAA5B,IAAoC,sBAAxC,EAAgE;AAC9D8L,cAAQ,KAAR;AACD;AACF,GAJD,CAIE,OAAOvH,CAAP,EAAU;AACVuH,YAAQ,KAAR;AACD;;AAED,MAAIxF,SAAStG,IAAT,IAAiBQ,SAAjB,IAA8B,CAACsL,KAAnC,EACEC,kBAAkBlG,WAAlB,EADF;AAIE;AACAY,gBAAYZ,WAAZ,EAAyBS,QAAzB;AACH;;AAED;AACA,SAASO,cAAT,CAAwBhB,WAAxB,EAAqCmG,iBAArC,EAAwD;;AAEtD,MAAI1F,iBAAJ;;AAEA;AACA,MAAImC,UAAUuD,kBAAkBvD,OAAhC;;AAEA;AACA,MAAIA,YAAY,UAAZ,IAA0BA,WAAW,qBAAzC,EAAgE;;AAE9DhI,UAAMoF,WAAN,IAAqB,EAArB;AACA7E,oBAAgB6E,WAAhB,EAA6BQ,IAA7B,CAAkC,aAAK;;AAErCC,iBAAWC,sBAAsBC,CAAtB,CAAX;;AAEAC,kBAAYZ,WAAZ,EAAyBS,QAAzB;AACD,KALD;AAOD,GAVD,MAUO,IAAImC,YAAY,iBAAhB,EAAmC;;AAExC,QAAMxC,UAAUxF,MAAMoF,WAAN,EAAmBoG,YAAnC;;AAEA;AACA,QAAIC,eAAe;AACjBC,iBAAW;AACTpG,YAAIF;AADK,OADM;AAIjBI,eAAS,EAAEjG,MAAMoM,SAAR;;AAGX;AAPmB,KAAnB,CAQApJ,QAAQ;AACNqJ,WAAK,6CADC;AAENC,UAAI,EAAEC,cAAc/H,iBAAhB,EAFE;AAGNgI,cAAQ,MAHF;AAINjJ,YAAM2I;AAJA,KAAR,EAKG,UAAC/D,GAAD,EAAMjD,GAAN,EAAWhF,IAAX,EAAoB;AACrB,UAAI,CAACiI,GAAL,EAAU;AACR,YAAItF,OAAJ,EAAa8B,QAAQC,GAAR,CAAY,eAAZ;;AAEb6B,oBAAYZ,WAAZ,EAAyBI,QAAQK,QAAjC,EAA2CL,QAAQwG,SAAnD;AAED,OALD,MAKO;AACL9H,gBAAQgC,KAAR,CAAc,4BAA4BwB,GAA1C;AACD;AACF,KAdD;AAeD;AACF;;AAED,SAASuE,UAAT,GAAsB;AACpB,MAAIvK,SAAS/B,KAAKuM,SAAL,CAAelM,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAb;AACA+C,KAAG0E,SAAH,CAAa,SAAb,EAAwB/F,MAAxB,EAAgC,MAAhC,EAAwC,UAACgG,GAAD,EAAS;AAC/C,QAAIA,GAAJ,EAASxD,QAAQC,GAAR,CAAYuD,GAAZ;AACV,GAFD;AAGD;;AAED,SAAS7D,SAAT,GAAqB;AACnBd,KAAGoJ,QAAH,CAAY,SAAZ,EAAuB,MAAvB,EAA+B,UAACzE,GAAD,EAAM0E,WAAN,EAAsB;AACnD,QAAI1E,GAAJ,EAAS;AACPxD,cAAQC,GAAR,CAAYuD,GAAZ;AACD,KAFD,MAEO;AACL1H,cAAQL,KAAKC,KAAL,CAAWwM,YAAY7G,QAAZ,EAAX,CAAR;AACA,UAAInD,OAAJ,EACE8B,QAAQC,GAAR,CAAYnE,KAAZ;AACH;AACF,GARD;AASD;;AAGD;AACA,SAASgG,WAAT,CAAqBZ,WAArB,EAAkCS,QAAlC,EAA4D;AAAA,MAAhBmG,SAAgB,uEAAN,IAAM;;AAC1D;AACA,MAAIP,eAAe;AACjBC,eAAW;AACTpG,UAAIF;AADK,KADM;AAIjBI,aAASK;AAJQ,GAAnB;;AAOA,MAAImG,aAAa,IAAjB,EAAuB;AACrBP,iBAAaY,QAAb,GAAwBL,SAAxB;AACD;;AAED;AACAzJ,UAAQ;AACNqJ,SAAK,6CADC;AAENC,QAAI,EAAEC,cAAc/H,iBAAhB,EAFE;AAGNgI,YAAQ,MAHF;AAINjJ,UAAM2I;AAJA,GAAR,EAKG,UAAC/D,GAAD,EAAMjD,GAAN,EAAWhF,IAAX,EAAoB;AACrB,QAAI,CAACiI,GAAL,EAAU;AACR,UAAItF,OAAJ,EAAa8B,QAAQC,GAAR,CAAY,eAAZ;AACd,KAFD,MAEO;AACLD,cAAQgC,KAAR,CAAc,4BAA4BwB,GAA1C;AACD;AACF,GAXD;;AAaA;AACA,MAAI7B,SAAStG,IAAT,IAAiB+B,UAArB,EAAiC;AAC/BtB,UAAMoF,WAAN,EAAmBoG,YAAnB,GAAkC;AAChCpG,mBAAaA,WADmB;AAEhCS,gBAAUA,QAFsB;AAGhCmG,iBAAWA;AAHqB,KAAlC;AAKD;;AAEDC;AACD;;AAED,SAASX,iBAAT,CAA2BlG,WAA3B,EAAwC;;AAEtC,MAAIA,eAAerF,SAAf,IACAC,MAAMoF,WAAN,KAAsBrF,SAD1B,EACqC;;AAEnC,QAAMyF,UAAUxF,MAAMoF,WAAN,EAAmBoG,YAAnC;;AAEA;AACA,QAAIC,eAAe;AACjBC,iBAAW;AACTpG,YAAIF;AADK,OADM;AAIjBI,eAAS,EAAEjG,MAAM+B,UAAR;;AAGX;AAPmB,KAAnB,CAQAiB,QAAQ;AACNqJ,WAAK,6CADC;AAENC,UAAI,EAAEC,cAAc/H,iBAAhB,EAFE;AAGNgI,cAAQ,MAHF;AAINjJ,YAAM2I;AAJA,KAAR,EAKG,UAAC/D,GAAD,EAAMjD,GAAN,EAAWhF,IAAX,EAAoB;AACrB,UAAI,CAACiI,GAAL,EAAU;AACR,YAAItF,OAAJ,EAAa8B,QAAQC,GAAR,CAAY,eAAZ;;AAEb6B,oBAAYZ,WAAZ,EAAyBI,QAAQK,QAAjC,EAA2CL,QAAQwG,SAAnD;AAED,OALD,MAKO;AACL9H,gBAAQgC,KAAR,CAAc,4BAA4BwB,GAA1C;AACD;AACF,KAdD;AAiBD,GA/BD,MA+BO;AACL1H,UAAMoF,WAAN,IAAqB,EAArB;AACA7E,oBAAgB6E,WAAhB,EAA6BQ,IAA7B,CAAkC,aAAK;AACrC,UAAMC,WAAWC,sBAAsBC,CAAtB,CAAjB;AACAC,kBAAYZ,WAAZ,EAAyBS,QAAzB;AACD,KAHD;AAID;AACF;;AAED,SAASC,qBAAT,CAA+BwG,QAA/B,EAAyC;;AAEvC,MAAM7C,UAAU,CACd;AACE3B,kBAAc,MADhB;AAEEC,WAAO,KAFT;AAGEC,aAAS;AAHX,GADc,EAMd;AACEF,kBAAc,MADhB;AAEEC,WAAO,IAFT;AAGEC,aAAS;AAHX,GANc,CAAhB;AAYA,SAAO0B,iBAAiB4C,QAAjB,EAA2B7C,OAA3B,CAAP;AACD;;AAGD,SAASC,gBAAT,CAA0B4C,QAA1B,EAAoC7C,OAApC,EAA6C;AAC3C,SAAO,EAAElK,MAAM+M,QAAR,EAAkBzE,eAAe4B,OAAjC,EAAP;AACD;;AAGD,SAASkC,OAAT,GAAmB;AACjB,MAAIlM,OAAO,sHAAX;AACA,SAAOA,IAAP;AACD;;AA0BD,SAASD,YAAT,CAAsBF,IAAtB,EAA4B;;AAE1B,MAAIsM,2CAAyCtM,IAA7C;AACA,SAAO,IAAIiN,OAAJ,CAAY,UAASC,OAAT,EAAkB;;AAEnCjK,YAAQ;AACNqJ,WAAKA,GADC;AAENC,UAAI;AACFC,sBAAc/H,iBADZ;AAEF0I,gBAAQ;AAFN,OAFE;AAMNV,cAAQ;AANF,KAAR,EAOG,UAAC7F,KAAD,EAAQzB,GAAR,EAAahF,IAAb,EAAsB;AACvB,UAAI,CAACyG,KAAL,EAAY;;AAEVsG,gBAAQ/M,IAAR;AAED,OAJD,MAIO;AACLyE,gBAAQgC,KAAR,CAAc,4BAA4BA,KAA1C;AACAsG,gBAAQzM,SAAR;AACD;AACF,KAhBD;AAiBD,GAnBM,CAAP;AAoBD",
      "file": "app.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "/*\n * Starter Project for Messenger Platform Quick Start Tutorial\n *\n * Remix this as the starting point for following the Messenger Platform\n * quick start tutorial.\n *\n * https://developers.facebook.com/docs/messenger-platform/getting-started/quick-start/\n *\n */\n\n\n\nvar states = Object.freeze({\n  greeting: 0,\n  ask_name: 1,\n  confirm_name: 2,\n  confirm_goldsmiths_student: 3,\n  warning_non_goldsmiths_student: 4,\n  confirm_student_id: 5,\n  ask_how_many_days: 6,\n  ask_how_much_cost: 7,\n  create_signiture: 8,\n  ask_data_format: 9,\n  send: 10,\n  ask_first_name: 11,\n  ask_last_name: 12,\n  ask_email: 13\n});\n\nconst repeatText = \"Sorry I didn't understand your reply :( I'll repeat my last message to you!\";\n\nString.prototype.levenstein = function(string) {\n    var a = this, b = string + \"\", m = [], i, j, min = Math.min;\n\n    if (!(a && b)) return (b || a).length;\n\n    for (i = 0; i <= b.length; m[i] = [i++]);\n    for (j = 0; j <= a.length; m[0][j] = j++);\n\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            m[i][j] = b.charAt(i - 1) == a.charAt(j - 1)\n                ? m[i - 1][j - 1]\n                : m[i][j] = min(\n                    m[i - 1][j - 1] + 1, \n                    min(m[i][j - 1] + 1, m[i - 1 ][j] + 1))\n        }\n    }\n\n    return m[b.length][a.length];\n}\n\nconst verbose = false;\nconst sigFolder = 'public';\nconst publicURL = 'https://grateful-duckling.glitch.me';\n\n'use strict';\n\n// Imports dependencies and set up http server\n\nconst \n  request = require('request'),\n  express = require('express'),\n  goldsmiths = require('./goldsmiths'),\n  body_parser = require('body-parser'),\n  app = express().use(body_parser.json()); // creates express http server\nconst fs = require('fs');\nvar sh = require('shelljs');\nvar nodemailer = require('nodemailer');\nvar validator = require(\"email-validator\");\n\nvar transporter = nodemailer.createTransport({\n service: 'gmail',\n auth: {\n        user: process.env.GMAIL_ADDRESS,\n        pass: process.env.GMAIL_PASSWORD\n    }\n});\n\nvar users;\ntry {\n  readUsers();\n} catch (e) {\n  users = {};\n}\n\nconst PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;\n\n// Sets server port and logs message on success\napp.listen(process.env.PORT || 1337, () => console.log('webhook is listening'));\n\napp.use(express.static('public'));\n\n// Define the URLs we'll allow.\nvar ALLOWED_BY = new Set([\n  'https://www.messenger.com/',\n  'https://www.facebook.com/'\n])\n\napp.get('/iframe', function (req, res) {\n  // Is the URL in the whitelist?\n  // Set X-Frame-Options if so. Otherwise, we won't\n  // set the header and browsers will block it.\n  var domain = String(req.query.domain)\n  if (ALLOWED_BY.has(domain)) {\n    res.setHeader('X-Frame-Options', 'ALLOW-FROM ' + domain)\n  }\n\n  // Send the iframe as usual.\n  res.sendFile('iframe.html')\n})\n\n// Accepts POST requests at /webhook endpoint\napp.post('/webhook', (req, res) => {  \n\n  // Parse the request body from the POST\n  let body = req.body;\n\n  // Check the webhook event is from a Page subscription\n  if (body.object === 'page') {\n\n    // Iterate over each entry - there may be multiple if batched\n    body.entry.forEach(function(entry) {\n\n      // Get the webhook event. entry.messaging is an array, but \n      // will only ever contain one event, so we get index 0\n      let webhook_event = entry.messaging[0];\n      \n      if (verbose) console.log(webhook_event);\n      \n      // Get the sender PSID\n      let sender_psid = webhook_event.sender.id.toString();\n      if (verbose) console.log('Sender PSID: ' + sender_psid);\n      // Check if the event is a message or a postback\n      // Pass the event to the appropraite handler function.\n      \n      \n      const message = webhook_event.message;\n      \n      const invalidStates = [\n        states.confirm_student_id,\n        states.ask_how_many_days,\n        states.ask_how_much_cost,\n        states.ask_first_name,\n        states.ask_last_name,\n        states.ask_email\n      ];\n      \n      let validState = true;\n      if (users[sender_psid] != undefined) {\n        for (var i = 0; i < invalidStates.length; ++i) {\n          if (users[sender_psid].state == invalidStates[i]) {\n            validState = false;\n            i = invalidStates.length;\n            break;\n          }\n        } \n      }\n      \n      if (message) {\n        \n        try {\n          if (validState && (\n              message.text.toLowerCase().levenstein('start again') < 2 ||\n              message.text.toLowerCase().levenstein('start') < 2 ||\n              message.text.toLowerCase().levenstein('hello') < 2 ||\n              message.text.toLowerCase().levenstein('hi') < 2 ||\n              message.text.toLowerCase().levenstein('hello there') < 2 ||\n              message.text.toLowerCase().levenstein('hi there') < 2 ||\n              message.text.toLowerCase().levenstein('begin') < 2)) {\n\n            // Set the response based on the postback payload\n            users[sender_psid] = {};\n            getFirstMessage(sender_psid).then(t => {\n\n              const response = getYesNoQuickQuestion(t);\n\n              callSendAPI(sender_psid, response);\n            });\n\n          } else {\n\n            handleMessage(sender_psid, message);\n          }\n        \n        } catch (error) {\n          \n          console.log(error);\n        }\n        \n      } else if (webhook_event.postback) {\n        handlePostback(sender_psid, webhook_event.postback);\n      }\n    });\n\n    // Return a '200 OK' response to all events\n    res.status(200).send('EVENT_RECEIVED');\n\n  } else {\n    // Return a '404 Not Found' if event is not from a page subscription\n    res.sendStatus(404);\n  }\n\n});\n\n// Accepts GET requests at the /webhook endpoint\napp.get('/webhook', (req, res) => {\n  \n  /** UPDATE YOUR VERIFY TOKEN **/\n  const VERIFY_TOKEN = \"superdude\";\n  \n  // Parse params from the webhook verification request\n  let mode = req.query['hub.mode'];\n  let token = req.query['hub.verify_token'];\n  let challenge = req.query['hub.challenge'];\n    \n  // Check if a token and mode were sent\n  if (mode && token) {\n  \n    // Check the mode and token sent are correct\n    if (mode === 'subscribe' && token === VERIFY_TOKEN) {\n      \n      // Respond with 200 OK and challenge token from the request\n      console.log('WEBHOOK_VERIFIED');\n      res.status(200).send(challenge);\n    \n    } else {\n      // Responds with '403 Forbidden' if verify tokens do not match\n      res.sendStatus(403);      \n    }\n  }\n});\n\n\n// Handle POST from xxx/receive\napp.post('/receive', function(request, respond) {\n  \n  let body = '';\n  \n  request.on('data', function(data) {\n    body += data;\n  });\n  \n  request.on('end', function (){\n    \n    body = JSON.parse(body);\n    \n    let psid = body.name;\n    \n    if (psid.length > 25) {\n\n      let stop;\n      for (var i = 0; i < psid.length; ++i) {\n\n        stop = i;\n        if (isNaN(parseInt(psid[i], 10))) {\n          break;\n        }\n      }\n\n      psid = psid.substring(0, stop);\n    }\n    \n    const filePath = __dirname + '/' + sigFolder + '/' + `${psid}.png`;\n    \n    notifyUserRecivedSignature(psid);\n    \n    // Get rid of the image header as we only need the data parts after it.\n    const data = body.data.replace(/^data:image\\/\\w+;base64,/, \"\");\n    // Create a buffer and set its encoding to base64\n    var buf = new Buffer(data, 'base64');\n    // Write\n    fs.writeFile(filePath, buf, function(err){\n      if (err) throw err\n      // Respond to client that the canvas image is saved.\n      \n      users[psid].signature_exists = true;\n      respond.end();\n    });\n  });\n});\n\nfunction notifyUserRecivedSignature(psid) {\n\n  users[psid].state = states.ask_data_format;\n  const response = {\n    \n    text: 'Great, we got your signature! For now I will only support rendering your letter as a PDF - but more features are coming soon! Please select PDF below to continue :)',\n      \n    quick_replies: [\n      {\n        content_type: \"text\",\n        title: \"PDF\",\n        payload: \"LATEX_PAYLOAD\"\n      }\n    ],\n    \n  };\n  \n  callSendAPI(psid, response);\n}\n\n\n\n\n\n\n\n\n\n\nfunction handleTextMessage(sender_psid, received_message) {\n  \n  let userState = users[sender_psid].state;\n  let text;\n  let quickReplies = null;\n  \n  if (userState == states.ask_name) {\n\n    text = \"Thanks \" + received_message;\n    \n  } else if (userState == states.ask_first_name) {\n    \n    text = \"Thanks \" + received_message + \". Now what is your second name?\";\n    users[sender_psid].first_name = received_message;\n    users[sender_psid].state = states.ask_last_name;\n    \n  } else if (userState == states.ask_last_name) {\n    \n    text = \"Awesome! Now are you a goldsmiths student?\";\n    users[sender_psid].last_name = received_message;\n    \n    quickReplies = [\n      {\n        content_type: \"text\",\n        title: \"Yes\",\n        payload: \"YES_PAYLOAD\"\n      },\n      {\n        content_type: \"text\",\n        title: \"No\",\n        payload: \"NO_PAYLOAD\"\n      }\n    ]\n    users[sender_psid].state = states.confirm_goldsmiths_student;\n\n  } else if (userState == states.confirm_student_id) {\n    \n    users[sender_psid].student_id = received_message;\n    \n    users[sender_psid].state = states.ask_email;\n    \n    text = `Thanks. Next I need to know your email address, prefereably your student one so there is an easy contact method in the correspodance I generate for you. To be clear, I will not store, share or ever send you anything via this email address.\\n\\nPlease write your email adress down next.`;\n    \n  } else if (userState == states.ask_how_much_cost) {\n    \n    users[sender_psid].tuition_fee = Number(received_message);\n    \n    if (!isNaN(users[sender_psid].tuition_fee)) {\n      \n      const days = users[sender_psid].amount_days;\n\n      const cost = moneyOwed(users[sender_psid].tuition_fee, days);\n      users[sender_psid].amount_reimburse = cost;\n\n      text = `Thanks again! Nearly done now :)\\n\\n` +\n             `I calculate that 14 out of your ${days} days at your tuition cost means you should be reinbursed £${cost}.\\n\\n` + \n             `Would you like to add your signature to the correspondance? ` +\n             `(A pop-up will appear)`;\n      quickReplies = [ \n        {\n          content_type: \"text\",\n          title: \"Sounds cool!\",\n          payload: \"YES_PAYLOAD\"\n        },\n        {\n          content_type: \"text\",\n          title: \"No Thanks\",\n          payload: \"NO_PAYLOAD\"\n        }\n      ];\n\n      users[sender_psid].state = states.create_signiture;\n    }\n\n  } else if (userState == states.ask_how_many_days) {\n    \n    users[sender_psid].amount_days = Number(received_message);\n    \n    if (!isNaN(users[sender_psid].amount_days)) {\n      \n      users[sender_psid].state = states.ask_how_much_cost;\n\n      text = \"Great thanks for that.\\n\\n\" +\n             \"Next, how much is the tution fees for this academic year?\\n\\n\" + \n             \"Select either a custom amount (in GBP £) or the default, £9000.\";\n      quickReplies = [\n        {\n          content_type: \"text\",\n          title: \"Default £9000\",\n          payload: \"DEFAULT_PAYLOAD\"\n        },\n        {\n          content_type: \"text\",\n          title: \"Custom\",\n          payload: \"CUSTOM_PAYLOAD\"\n        }\n      ];\n    }\n  } else if (userState == states.ask_email) {\n    \n    users[sender_psid].email_address = received_message;\n    \n    if (validator.validate(users[sender_psid].email_address)) {\n      \n      users[sender_psid].state = states.ask_how_many_days;\n\n      text = `We will now need to work out how much you are owed.\\n\\n` +\n             `For now, we will work out the ` +\n             `fraction of tution fee that you have spent not accessing the ` +\n             `universities facilities during the 14 day strike. Firstly, we ` +\n             `need to know how many days there are in your academic year. On ` +\n             `average (and this is a conservative estimate) there are 170.\\n\\n` +\n             `Would you like to use the default 170 days or would you like to ` +\n             `enter a custom amount?`;\n\n      quickReplies = [\n        {\n          content_type: \"text\",\n          title: \"Default\",\n          payload: \"DEFAULT_PAYLOAD\"\n        },\n        {\n          content_type: \"text\",\n          title: \"Custom\",\n          payload: \"CUSTOM_PAYLOAD\"\n        }\n      ];\n    }\n  }\n  \n  let response = { text: text };\n  \n  if (quickReplies != null) {\n    response.quick_replies = quickReplies;\n  }\n  \n  return response;\n}\n\n\nfunction handleQuickReply(sender_psid, received_reply) {\n  \n  let payload = received_reply.payload;\n  let response;\n  \n  if (payload === 'YES_PAYLOAD') {\n       \n    if (users[sender_psid].state == states.confirm_name) {\n      \n      response = getYesNoQuickQuestion(\"Great, thanks! Now, are you a Goldsmiths student?\");\n      \n      users[sender_psid].state = states.confirm_goldsmiths_student;\n\n    } else if (users[sender_psid].state == states.confirm_goldsmiths_student) {\n      \n      response = {\n        \"text\": \"Okay great, thanks! Can you next tell me what your student ID number is?\"\n      }\n      \n      users[sender_psid].university = \"goldsmiths\";      \n      users[sender_psid].state = states.confirm_student_id;\n      \n    } else if (users[sender_psid].state == states.create_signiture) {\n      \n      response = {\n        attachment: {\n          type: \"template\",\n          payload: {\n            template_type: \"button\",\n            text: \"Draw your signiture!\",\n            buttons: [\n              {\n                type: \"web_url\",\n                url: `https://grateful-duckling.glitch.me?${sender_psid}`,\n                title: \"Start here\",\n                webview_height_ratio: \"tall\",\n                messenger_extensions: \"true\",  \n              }\n            ]\n          }\n        }\n      };\n    }\n    \n  } else if (payload === 'NO_PAYLOAD') {\n    \n    if (users[sender_psid].state == states.confirm_name) {\n      \n      response = {\n        text: \"Okay no problem! Please tell me your first name.\"\n      }\n      \n      users[sender_psid].state = states.ask_first_name;\n    \n    } else if (users[sender_psid].state == states.confirm_goldsmiths_student) {\n      \n      response = {\n        text: \"Okay no problem! Just be aware that this chatbot and the functionality is in an alpha stage with Goldsmiths students in mind, so there may be a few elements that are not currently available to you. If you have feature requests please leave messages on my facebook page! :)\\n\\nOkay next question - what is your student ID number?\"\n      }\n\n      users[sender_psid].university = \"other\";\n      users[sender_psid].state = states.confirm_student_id;\n    \n    } else if (users[sender_psid].state == states.create_signiture) {\n      \n      users[sender_psid].signature_exists = false;\n      users[sender_psid].state = states.ask_data_format;\n      response = {\n\n        text: 'No problem! For now I will only support rendering your letter as a PDF - but more features are coming soon! Please select PDF below to continue :)',\n\n        quick_replies: [\n          {\n            content_type: \"text\",\n            title: \"PDF\",\n            payload: \"LATEX_PAYLOAD\"\n          }\n        ],\n    \n      };\n      \n    }\n    \n  } else if (payload === 'CUSTOM_PAYLOAD') {\n    \n    if (users[sender_psid].state == states.ask_how_many_days) {\n      response = {\n        text: \"Please write in numbers how many days you have in your academic year.\"\n      }\n    \n    } else if (users[sender_psid].state == states.ask_how_much_cost) {\n      response = {\n        text: \"Please write in numbers how much in british pound sterling £ your annual tuition fee is.\"\n      }\n    \n    }\n    \n  } else if (payload === 'DEFAULT_PAYLOAD') {\n    \n    if (users[sender_psid].state == states.ask_how_many_days) {\n      \n      users[sender_psid].amount_days = 170;\n      \n      let text = \"Great thanks for that.\\n\\n\" +\n                 \"Next, how much is the tution fees for this academic year?\\n\\n\" + \n                 \"Select either a custom amount (in GBP £) or the default, £9000.\";\n      let replies = [\n        {\n          content_type: \"text\",\n          title: \"Default £9000\",\n          payload: \"DEFAULT_PAYLOAD\"\n        },\n        {\n          content_type: \"text\",\n          title: \"Custom\",\n          payload: \"CUSTOM_PAYLOAD\"\n        }\n      ];\n      response = getQuickQuestion(text, replies);\n      users[sender_psid].state = states.ask_how_much_cost;\n      \n    } else if (users[sender_psid].state == states.ask_how_much_cost) {\n    \n      const tuitionFee = 9000;\n      users[sender_psid].tuition_fee = tuitionFee;\n      const days = users[sender_psid].amount_days;\n\n      const cost = moneyOwed(tuitionFee, days);\n      users[sender_psid].amount_reimburse = cost;\n      // I calculate that 14 out of your ${days} days at your tuition cost means you should be \n      let text = `Thanks again! Nearly done now :)\\n\\n` +\n                 `I calculate that 14 out of your ${days} days at your tuition cost means you should be reinbursed £${cost}.\\n\\n` + \n                 `Signatures can help improve the authenticity of documents. Would you like to add your signature to the generated correspondance? `;\n      let replies = [ \n        {\n          content_type: \"text\",\n          title: \"Yes\",\n          payload: \"YES_PAYLOAD\"\n        },\n        {\n          content_type: \"text\",\n          title: \"No\",\n          payload: \"NO_PAYLOAD\"\n        }\n      ];\n      response = getQuickQuestion(text, replies);\n      users[sender_psid].state = states.create_signiture;\n    \n    } \n  } else if (payload === 'LATEX_PAYLOAD') {\n  \n    const isGoldsmiths = users[sender_psid].university == \"goldsmiths\";\n    \n    // Create the latex file from template and user data.\n    const latexString = goldsmiths.generateLatexFile(sender_psid, \n                                                     users[sender_psid].first_name, \n                                                     users[sender_psid].last_name, \n                                                     users[sender_psid].email_address, \n                                                     users[sender_psid].student_id, \n                                                     users[sender_psid].tuition_fee, \n                                                     users[sender_psid].amount_days, \n                                                     users[sender_psid].amount_reimburse,\n                                                     users[sender_psid].signature_exists,\n                                                     isGoldsmiths);\n\n    fs.writeFile(`./public/${sender_psid}.tex`, latexString, function(err) {\n      if (err) {\n        return console.log(err);\n      }\n      \n      let shell;\n      if (users[sender_psid].signature_exists) {\n        shell = `./laton public/${sender_psid}.tex public/${sender_psid}.png && mv ${sender_psid}.pdf public/`;\n      } else {\n        shell = `./laton public/${sender_psid}.tex && mv ${sender_psid}.pdf public/`\n      }\n      \n      // Use laton and wait for pdf to exist.\n      const { stdout, stderr, code } = sh.exec(shell, { silent: true });\n      \n      const mailOptions = {\n        from: process.env.GMAIL_ADDRESS, // sender address\n        to: users[sender_psid].email_address, // list of receivers\n        subject: 'Your tuition fee reclaimation letter', // Subject line\n        html: '<p>Hi! Please find attached your tuition fee letter. Make sure you send it to the right people!</p>',// plain text body\n        attachments: [{\n          filename: \"letter.pdf\",\n          path: `public/${sender_psid}.pdf`\n        }]\n      };\n      // Send as attachment.\n      // Send the HTTP request to the Messenger Platform\n      transporter.sendMail(mailOptions, function (err, info) {\n        if (verbose)\n          console.log(info);\n        \n        // Clean up\n        fs.unlink(`./public/${sender_psid}.pdf`, (err) => {\n          if (verbose)\n            console.log(`./public/${sender_psid}.pdf was deleted`);\n        });\n        fs.unlink(`./public/${sender_psid}.tex`, (err) => {\n          if (verbose)\n            console.log(`./public/${sender_psid}.tex was deleted`);\n        });\n        if (users[sender_psid].signature_exists) {\n          fs.unlink(`./public/${sender_psid}.png`, (err) => {\n            if (verbose)\n              console.log(`./public/${sender_psid}.png was deleted`);\n          });\n        }\n      });\n\n    }); \n    \n    response = {\n        \"text\": \"Awesome! I'm just generating your document and a link will be sent to the email adress you supplied earlier! If you would like to use my service again, please select 'start again' from the menu below :)\"\n    }\n  }\n  return response;\n}\n\nfunction moneyOwed(tuition_cost, amount_days) {\n  \n  const fractionDays = 14 / amount_days;\n  const fractionCost = fractionDays * tuition_cost;\n  return Math.floor(fractionCost);\n}\n\n// Handles messages events\nfunction handleMessage(sender_psid, received_message) {\n  \n  let response;\n\n  // Check if the message is a quick reply.\n  if (received_message.quick_reply) {\n    \n    response = handleQuickReply(sender_psid, received_message.quick_reply);\n    \n  } else  if (received_message.text) {      \n    \n    response = handleTextMessage(sender_psid, received_message.text);   \n  }\n  \n  let isSig = true;\n  \n  try {\n    if (response.attachment.payload.text != 'Draw your signiture!') {\n      isSig = false;\n    }\n  } catch (e) {\n    isSig = false;\n  }\n\n  if (response.text == undefined && !isSig)\n    repeatLastmessage(sender_psid);\n  \n  else\n    // Sends the response message\n    callSendAPI(sender_psid, response);  \n}\n\n// Handles messaging_postbacks events\nfunction handlePostback(sender_psid, received_postback) {\n  \n  let response;\n  \n  // Get the payload for the postback\n  let payload = received_postback.payload;\n\n  // Set the response based on the postback payload\n  if (payload === 'Greeting' || payload == 'START_AGAIN_PAYLOAD') {\n    \n    users[sender_psid] = {};\n    getFirstMessage(sender_psid).then(t => {\n      \n      response = getYesNoQuickQuestion(t);\n      \n      callSendAPI(sender_psid, response);\n    });\n\n  } else if (payload === 'CONTACT_PAYLOAD') {\n    \n    const message = users[sender_psid].last_message;\n    \n    // Construct the message body\n    let request_body = {\n      recipient: {\n        id: sender_psid\n      },\n      message: { text: contact() }\n    }\n\n    // Send the HTTP request to the Messenger Platform\n    request({\n      uri: \"https://graph.facebook.com/v2.6/me/messages\",\n      qs: { access_token: PAGE_ACCESS_TOKEN },\n      method: \"POST\",\n      json: request_body\n    }, (err, res, body) => {\n      if (!err) {\n        if (verbose) console.log('message sent!')\n        \n        callSendAPI(sender_psid, message.response, message.file_data);\n        \n      } else {\n        console.error(\"Unable to send message:\" + err);\n      }\n    });\n  } \n}\n\nfunction writeUsers() {\n  var string = JSON.stringify(users, null, 2);\n  fs.writeFile('db.json', string, 'utf8', (err) => {\n    if (err) console.log(err);\n  });\n}\n\nfunction readUsers() {\n  fs.readFile('db.json', 'utf8', (err, fileContent) => {\n    if (err) {\n      console.log(err);\n    } else {\n      users = JSON.parse(fileContent.toString());\n      if (verbose)\n        console.log(users);\n    }\n  });\n}\n\n\n// Sends response messages via the Send API\nfunction callSendAPI(sender_psid, response, file_data=null) {\n  // Construct the message body\n  let request_body = {\n    recipient: {\n      id: sender_psid\n    },\n    message: response\n  }\n  \n  if (file_data != null) {\n    request_body.filedata = file_data;\n  }\n\n  // Send the HTTP request to the Messenger Platform\n  request({\n    uri: \"https://graph.facebook.com/v2.6/me/messages\",\n    qs: { access_token: PAGE_ACCESS_TOKEN },\n    method: \"POST\",\n    json: request_body\n  }, (err, res, body) => {\n    if (!err) {\n      if (verbose) console.log('message sent!')\n    } else {\n      console.error(\"Unable to send message:\" + err);\n    }\n  });\n  \n  // save last message\n  if (response.text != repeatText) {\n    users[sender_psid].last_message = {\n      sender_psid: sender_psid,\n      response: response,\n      file_data: file_data\n    };\n  }\n  \n  writeUsers();\n}\n\nfunction repeatLastmessage(sender_psid) {\n  \n  if (sender_psid == undefined || \n      users[sender_psid] != undefined) {\n    \n    const message = users[sender_psid].last_message;\n    \n    // Construct the message body\n    let request_body = {\n      recipient: {\n        id: sender_psid\n      },\n      message: { text: repeatText }\n    }\n\n    // Send the HTTP request to the Messenger Platform\n    request({\n      uri: \"https://graph.facebook.com/v2.6/me/messages\",\n      qs: { access_token: PAGE_ACCESS_TOKEN },\n      method: \"POST\",\n      json: request_body\n    }, (err, res, body) => {\n      if (!err) {\n        if (verbose) console.log('message sent!')\n        \n        callSendAPI(sender_psid, message.response, message.file_data);\n        \n      } else {\n        console.error(\"Unable to send message:\" + err);\n      }\n    });\n\n\n  } else {\n    users[sender_psid] = {};\n    getFirstMessage(sender_psid).then(t => {\n      const response = getYesNoQuickQuestion(t);\n      callSendAPI(sender_psid, response);\n    });\n  }\n}\n\nfunction getYesNoQuickQuestion(question) {\n  \n  const replies = [\n    {\n      content_type: \"text\",\n      title: \"Yes\",\n      payload: \"YES_PAYLOAD\"\n    },\n    {\n      content_type: \"text\",\n      title: \"No\",\n      payload: \"NO_PAYLOAD\"\n    }\n  ];\n  return getQuickQuestion(question, replies);\n}\n  \n\nfunction getQuickQuestion(question, replies) {\n  return { text: question, quick_replies: replies };\n}\n\n\nfunction contact() {\n  let body = 'Thanks for wanting to get in touch! You can email me at leonfedden@gmail.com\\n\\nI will now repeat my last message :)';\n  return body;\n}\n\n\nasync function getFirstMessage(psid) {\n  let text = 'Hey! Great to hear from you.\\n\\nI am going to ask you a few questions and then email a letter to you that can be used to help recover some of your tuition fees.';\n  var body = await firstMessage(psid);\n  let object = JSON.parse(body);\n  let firstName = object[\"first_name\"];\n  let lastName = object[\"last_name\"];\n  \n  if (firstName == undefined || lastName == undefined) {\n    \n    users[psid].state = states.ask_name;\n    text += '\\n\\nFor some reason I can not access your name. What is your full name?';\n  } else {\n    \n    users[psid].state = states.confirm_name;\n    text += \"\\n\\nI have your name as \";\n    text += (firstName + \" \" + lastName);\n    text += \", is that right?\";\n    users[psid].first_name = firstName;\n    users[psid].last_name = lastName;\n  }\n  return text;\n}\n\nfunction firstMessage(psid) {\n\n  let uri = `https://graph.facebook.com/v2.6/${psid}`\n  return new Promise(function(resolve) {\n\n    request({\n      uri: uri,\n      qs: { \n        access_token: PAGE_ACCESS_TOKEN,\n        fields: \"first_name,last_name\"\n      },\n      method: \"GET\"\n    }, (error, res, body) => {\n      if (!error) {\n        \n        resolve(body);\n\n      } else {\n        console.error(\"Unable to send message:\" + error);\n        resolve(undefined);\n      }\n    });\n  });\n}\n"
      ]
    },
    "mtime": 1521493451265
  },
  "{\"filename\":\"/app/goldsmiths.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/goldsmiths.js",
      "filenameRelative": "/app/goldsmiths.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "goldsmiths.js",
      "sourceFileName": "goldsmiths.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "goldsmiths"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = {\n\n  generateLatexFile: function generateLatexFile(psid, first_name, last_name, student_email, student_number, tuition_fee, amount_days, amount_reimburse) {\n    var include_signature = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : true;\n    var is_goldsmiths = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : true;\n\n\n    var uni = void 0;\n    if (is_goldsmiths) {\n      uni = 'Goldsmiths University of London';\n    } else {\n      uni = 'your university';\n    }\n\n    var latex = '\\\\documentclass{letter}\\n\\\\usepackage{hyperref}\\n\\\\usepackage{graphicx}\\n\\\\usepackage{mathtools}\\n';\n\n    latex += '\\n\\\\DeclarePairedDelimiter\\\\floor{\\\\lfloor}{\\\\rfloor}\\n\\n\\\\signature{' + first_name + ' ' + last_name + '}\\n\\n';\n\n    if (is_goldsmiths) {\n      latex += '\\\\address{Warden\\u2019s Office \\\\\\\\ Ms Helen Keogh \\\\\\\\ Mr Patrick Loughrey \\\\\\\\ \\nDeptford Town Hall Building \\\\\\\\ Room 101 \\\\\\\\ New Cross \\\\\\\\ London, UK \\\\\\\\ \\nSE14 6NW \\\\\\\\ 020 7919 7901}\\n\\n';\n    }\n\n    latex += '\\\\longindentation=0pt\\n\\\\begin{document}\\n\\n\\\\begin{letter}{Student Number: ' + student_number + ' \\\\\\\\ Email: ' + student_email + '}\\n\\\\opening{To the Warden\\'s Office}\\n\\nThis letter is to request reasonable compensation for the loss of lectures and contact time with tutors as a result of the UCU strike action from February 22nd to March 16th.\\n\\nI, as a student of ' + uni + ', demand that the institution refund a portion of my tuition, respective to my enrollment status and programme.\\n\\nDue to the employer\\u2019s failure to protect the livelihoods of its staff, the UCU has organized a fourteen day strike, as a means of opposing the recent proposals that would damage the USS pension scheme. Consequently, the student body suffers a loss of critical mentorship and face time with the faculty, most notably in the loss of organized class time such as lectures, tutorials, workshops, and critiques.\\n\\nConsidering that for the duration of the strike students will not be accessing tuition or crossing the picket line to use Goldsmiths\\u2019 facilities, I believe I should be refunded the following amount: \\\\textbf{\\\\textsterling ' + amount_reimburse + '}\\n\\nThis amount was derived from the fraction of the days missed due to the strikes, $x$, out of the amount of days in the academic year, $y$, multiplied by the tution fees for this year $z$, which is then floored (rounded down) to the nearest pound sterling.\\n\\n\\\\begin{equation}\\n\\\\floor*{\\\\frac{x}{y}z} = \\\\text{\\\\textsterling} \\\\floor*{\\\\frac{14}{' + amount_days + '} \\\\times ' + tuition_fee + '} = \\\\text{\\\\textsterling} ' + amount_reimburse + '\\n\\\\end{equation}\\n\\nIt is the responsibility of the institution to provide a complete and quality education to each of its students, to the fullest extent and duration that it was advertised. Additionally, I find the institution\\u2019s administration to be directly accountable for both the inception and the entire duration of the strike. At any point, the university administration can commit to meaningful negotiation that would fairly address the staff concerns and end the strike. As a result of the rising cost of university tuition, students are burdened by increasing levels of debt. It is irresponsible and unmerited for the university to demand each of its students increase their personal debt for a service that has been denied to them.\\n\\n\\\\vspace{3em}\\n\\nSincerely,\\n\\n';\n\n    if (include_signature) {\n      latex += '\\n\\\\includegraphics[height=12em]{' + psid + '.png}';\n    }\n\n    latex += '\\n\\n' + first_name + ' ' + last_name + '\\n\\n\\\\end{letter}\\n\\\\end{document}';\n\n    return latex;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvbGRzbWl0aHMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdlbmVyYXRlTGF0ZXhGaWxlIiwicHNpZCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJzdHVkZW50X2VtYWlsIiwic3R1ZGVudF9udW1iZXIiLCJ0dWl0aW9uX2ZlZSIsImFtb3VudF9kYXlzIiwiYW1vdW50X3JlaW1idXJzZSIsImluY2x1ZGVfc2lnbmF0dXJlIiwiaXNfZ29sZHNtaXRocyIsInVuaSIsImxhdGV4Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCOztBQUVmQyxxQkFBbUIsMkJBQVNDLElBQVQsRUFBZUMsVUFBZixFQUEyQkMsU0FBM0IsRUFBc0NDLGFBQXRDLEVBQXFEQyxjQUFyRCxFQUFxRUMsV0FBckUsRUFBa0ZDLFdBQWxGLEVBQStGQyxnQkFBL0YsRUFBNko7QUFBQSxRQUE1Q0MsaUJBQTRDLHVFQUExQixJQUEwQjtBQUFBLFFBQXBCQyxhQUFvQix1RUFBTixJQUFNOzs7QUFFOUssUUFBSUMsWUFBSjtBQUNBLFFBQUlELGFBQUosRUFBbUI7QUFDakJDLFlBQU0saUNBQU47QUFDRCxLQUZELE1BRU87QUFDTEEsWUFBTSxpQkFBTjtBQUNEOztBQUVELFFBQUlDLFFBQVEsb0dBQVo7O0FBRUFBLHVGQUlVVixVQUpWLFNBSXdCQyxTQUp4Qjs7QUFRQSxRQUFJTyxhQUFKLEVBQW1CO0FBQ2pCRTtBQUtEOztBQUVMQSw4RkFHa0NQLGNBSGxDLHFCQUdnRUQsYUFIaEUsc1BBUXFCTyxHQVJyQiw4dkJBWWlPSCxnQkFaak8sd1dBaUJ1RUQsV0FqQnZFLGtCQWlCK0ZELFdBakIvRixtQ0FpQndJRSxnQkFqQnhJOztBQTRCQSxRQUFJQyxpQkFBSixFQUF1QjtBQUNyQkcscURBQytCWCxJQUQvQjtBQUVEOztBQUVHVyxzQkFFRlYsVUFGRSxTQUVZQyxTQUZaOztBQU9BLFdBQU9TLEtBQVA7QUFDRDtBQXRFYyxDQUFqQiIsImZpbGUiOiJnb2xkc21pdGhzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXG4gIGdlbmVyYXRlTGF0ZXhGaWxlOiBmdW5jdGlvbihwc2lkLCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIHN0dWRlbnRfZW1haWwsIHN0dWRlbnRfbnVtYmVyLCB0dWl0aW9uX2ZlZSwgYW1vdW50X2RheXMsIGFtb3VudF9yZWltYnVyc2UsIGluY2x1ZGVfc2lnbmF0dXJlPXRydWUsIGlzX2dvbGRzbWl0aHM9dHJ1ZSkge1xuICAgIFxuICAgIGxldCB1bmk7XG4gICAgaWYgKGlzX2dvbGRzbWl0aHMpIHtcbiAgICAgIHVuaSA9ICdHb2xkc21pdGhzIFVuaXZlcnNpdHkgb2YgTG9uZG9uJztcbiAgICB9IGVsc2Uge1xuICAgICAgdW5pID0gJ3lvdXIgdW5pdmVyc2l0eSc7XG4gICAgfVxuICAgIFxuICAgIGxldCBsYXRleCA9ICdcXFxcZG9jdW1lbnRjbGFzc3tsZXR0ZXJ9XFxuXFxcXHVzZXBhY2thZ2V7aHlwZXJyZWZ9XFxuXFxcXHVzZXBhY2thZ2V7Z3JhcGhpY3h9XFxuXFxcXHVzZXBhY2thZ2V7bWF0aHRvb2xzfVxcbidcblxuICAgIGxhdGV4ICs9XG5gXG5cXFxcRGVjbGFyZVBhaXJlZERlbGltaXRlclxcXFxmbG9vcntcXFxcbGZsb29yfXtcXFxccmZsb29yfVxuXG5cXFxcc2lnbmF0dXJleyR7Zmlyc3RfbmFtZX0gJHtsYXN0X25hbWV9fVxuXG5gO1xuXG4gICAgaWYgKGlzX2dvbGRzbWl0aHMpIHtcbiAgICAgIGxhdGV4ICs9IGBcXFxcYWRkcmVzc3tXYXJkZW7igJlzIE9mZmljZSBcXFxcXFxcXCBNcyBIZWxlbiBLZW9naCBcXFxcXFxcXCBNciBQYXRyaWNrIExvdWdocmV5IFxcXFxcXFxcIFxuRGVwdGZvcmQgVG93biBIYWxsIEJ1aWxkaW5nIFxcXFxcXFxcIFJvb20gMTAxIFxcXFxcXFxcIE5ldyBDcm9zcyBcXFxcXFxcXCBMb25kb24sIFVLIFxcXFxcXFxcIFxuU0UxNCA2TlcgXFxcXFxcXFwgMDIwIDc5MTkgNzkwMX1cblxuYDtcbiAgICB9XG4gICAgXG5sYXRleCArPSBgXFxcXGxvbmdpbmRlbnRhdGlvbj0wcHRcblxcXFxiZWdpbntkb2N1bWVudH1cblxuXFxcXGJlZ2lue2xldHRlcn17U3R1ZGVudCBOdW1iZXI6ICR7c3R1ZGVudF9udW1iZXJ9IFxcXFxcXFxcIEVtYWlsOiAke3N0dWRlbnRfZW1haWx9fVxuXFxcXG9wZW5pbmd7VG8gdGhlIFdhcmRlbidzIE9mZmljZX1cblxuVGhpcyBsZXR0ZXIgaXMgdG8gcmVxdWVzdCByZWFzb25hYmxlIGNvbXBlbnNhdGlvbiBmb3IgdGhlIGxvc3Mgb2YgbGVjdHVyZXMgYW5kIGNvbnRhY3QgdGltZSB3aXRoIHR1dG9ycyBhcyBhIHJlc3VsdCBvZiB0aGUgVUNVIHN0cmlrZSBhY3Rpb24gZnJvbSBGZWJydWFyeSAyMm5kIHRvIE1hcmNoIDE2dGguXG5cbkksIGFzIGEgc3R1ZGVudCBvZiAke3VuaX0sIGRlbWFuZCB0aGF0IHRoZSBpbnN0aXR1dGlvbiByZWZ1bmQgYSBwb3J0aW9uIG9mIG15IHR1aXRpb24sIHJlc3BlY3RpdmUgdG8gbXkgZW5yb2xsbWVudCBzdGF0dXMgYW5kIHByb2dyYW1tZS5cblxuRHVlIHRvIHRoZSBlbXBsb3llcuKAmXMgZmFpbHVyZSB0byBwcm90ZWN0IHRoZSBsaXZlbGlob29kcyBvZiBpdHMgc3RhZmYsIHRoZSBVQ1UgaGFzIG9yZ2FuaXplZCBhIGZvdXJ0ZWVuIGRheSBzdHJpa2UsIGFzIGEgbWVhbnMgb2Ygb3Bwb3NpbmcgdGhlIHJlY2VudCBwcm9wb3NhbHMgdGhhdCB3b3VsZCBkYW1hZ2UgdGhlIFVTUyBwZW5zaW9uIHNjaGVtZS4gQ29uc2VxdWVudGx5LCB0aGUgc3R1ZGVudCBib2R5IHN1ZmZlcnMgYSBsb3NzIG9mIGNyaXRpY2FsIG1lbnRvcnNoaXAgYW5kIGZhY2UgdGltZSB3aXRoIHRoZSBmYWN1bHR5LCBtb3N0IG5vdGFibHkgaW4gdGhlIGxvc3Mgb2Ygb3JnYW5pemVkIGNsYXNzIHRpbWUgc3VjaCBhcyBsZWN0dXJlcywgdHV0b3JpYWxzLCB3b3Jrc2hvcHMsIGFuZCBjcml0aXF1ZXMuXG5cbkNvbnNpZGVyaW5nIHRoYXQgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgc3RyaWtlIHN0dWRlbnRzIHdpbGwgbm90IGJlIGFjY2Vzc2luZyB0dWl0aW9uIG9yIGNyb3NzaW5nIHRoZSBwaWNrZXQgbGluZSB0byB1c2UgR29sZHNtaXRoc+KAmSBmYWNpbGl0aWVzLCBJIGJlbGlldmUgSSBzaG91bGQgYmUgcmVmdW5kZWQgdGhlIGZvbGxvd2luZyBhbW91bnQ6IFxcXFx0ZXh0YmZ7XFxcXHRleHRzdGVybGluZyAke2Ftb3VudF9yZWltYnVyc2V9fVxuXG5UaGlzIGFtb3VudCB3YXMgZGVyaXZlZCBmcm9tIHRoZSBmcmFjdGlvbiBvZiB0aGUgZGF5cyBtaXNzZWQgZHVlIHRvIHRoZSBzdHJpa2VzLCAkeCQsIG91dCBvZiB0aGUgYW1vdW50IG9mIGRheXMgaW4gdGhlIGFjYWRlbWljIHllYXIsICR5JCwgbXVsdGlwbGllZCBieSB0aGUgdHV0aW9uIGZlZXMgZm9yIHRoaXMgeWVhciAkeiQsIHdoaWNoIGlzIHRoZW4gZmxvb3JlZCAocm91bmRlZCBkb3duKSB0byB0aGUgbmVhcmVzdCBwb3VuZCBzdGVybGluZy5cblxuXFxcXGJlZ2lue2VxdWF0aW9ufVxuXFxcXGZsb29yKntcXFxcZnJhY3t4fXt5fXp9ID0gXFxcXHRleHR7XFxcXHRleHRzdGVybGluZ30gXFxcXGZsb29yKntcXFxcZnJhY3sxNH17JHthbW91bnRfZGF5c319IFxcXFx0aW1lcyAke3R1aXRpb25fZmVlfX0gPSBcXFxcdGV4dHtcXFxcdGV4dHN0ZXJsaW5nfSAke2Ftb3VudF9yZWltYnVyc2V9XG5cXFxcZW5ke2VxdWF0aW9ufVxuXG5JdCBpcyB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlIGluc3RpdHV0aW9uIHRvIHByb3ZpZGUgYSBjb21wbGV0ZSBhbmQgcXVhbGl0eSBlZHVjYXRpb24gdG8gZWFjaCBvZiBpdHMgc3R1ZGVudHMsIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBhbmQgZHVyYXRpb24gdGhhdCBpdCB3YXMgYWR2ZXJ0aXNlZC4gQWRkaXRpb25hbGx5LCBJIGZpbmQgdGhlIGluc3RpdHV0aW9u4oCZcyBhZG1pbmlzdHJhdGlvbiB0byBiZSBkaXJlY3RseSBhY2NvdW50YWJsZSBmb3IgYm90aCB0aGUgaW5jZXB0aW9uIGFuZCB0aGUgZW50aXJlIGR1cmF0aW9uIG9mIHRoZSBzdHJpa2UuIEF0IGFueSBwb2ludCwgdGhlIHVuaXZlcnNpdHkgYWRtaW5pc3RyYXRpb24gY2FuIGNvbW1pdCB0byBtZWFuaW5nZnVsIG5lZ290aWF0aW9uIHRoYXQgd291bGQgZmFpcmx5IGFkZHJlc3MgdGhlIHN0YWZmIGNvbmNlcm5zIGFuZCBlbmQgdGhlIHN0cmlrZS4gQXMgYSByZXN1bHQgb2YgdGhlIHJpc2luZyBjb3N0IG9mIHVuaXZlcnNpdHkgdHVpdGlvbiwgc3R1ZGVudHMgYXJlIGJ1cmRlbmVkIGJ5IGluY3JlYXNpbmcgbGV2ZWxzIG9mIGRlYnQuIEl0IGlzIGlycmVzcG9uc2libGUgYW5kIHVubWVyaXRlZCBmb3IgdGhlIHVuaXZlcnNpdHkgdG8gZGVtYW5kIGVhY2ggb2YgaXRzIHN0dWRlbnRzIGluY3JlYXNlIHRoZWlyIHBlcnNvbmFsIGRlYnQgZm9yIGEgc2VydmljZSB0aGF0IGhhcyBiZWVuIGRlbmllZCB0byB0aGVtLlxuXG5cXFxcdnNwYWNlezNlbX1cblxuU2luY2VyZWx5LFxuXG5gO1xuXG5pZiAoaW5jbHVkZV9zaWduYXR1cmUpIHtcbiAgbGF0ZXggKz0gYFxuXFxcXGluY2x1ZGVncmFwaGljc1toZWlnaHQ9MTJlbV17JHtwc2lkfS5wbmd9YDtcbn1cbiAgICBcbiAgICBsYXRleCArPSBgXG5cbiR7Zmlyc3RfbmFtZX0gJHtsYXN0X25hbWV9XG5cblxcXFxlbmR7bGV0dGVyfVxuXFxcXGVuZHtkb2N1bWVudH1gOyAgXG4gICAgXG4gICAgcmV0dXJuIGxhdGV4O1xuICB9XG59OyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "goldsmiths.js"
      ],
      "names": [
        "module",
        "exports",
        "generateLatexFile",
        "psid",
        "first_name",
        "last_name",
        "student_email",
        "student_number",
        "tuition_fee",
        "amount_days",
        "amount_reimburse",
        "include_signature",
        "is_goldsmiths",
        "uni",
        "latex"
      ],
      "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB;;AAEfC,qBAAmB,2BAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,aAAtC,EAAqDC,cAArD,EAAqEC,WAArE,EAAkFC,WAAlF,EAA+FC,gBAA/F,EAA6J;AAAA,QAA5CC,iBAA4C,uEAA1B,IAA0B;AAAA,QAApBC,aAAoB,uEAAN,IAAM;;;AAE9K,QAAIC,YAAJ;AACA,QAAID,aAAJ,EAAmB;AACjBC,YAAM,iCAAN;AACD,KAFD,MAEO;AACLA,YAAM,iBAAN;AACD;;AAED,QAAIC,QAAQ,oGAAZ;;AAEAA,uFAIUV,UAJV,SAIwBC,SAJxB;;AAQA,QAAIO,aAAJ,EAAmB;AACjBE;AAKD;;AAELA,8FAGkCP,cAHlC,qBAGgED,aAHhE,sPAQqBO,GARrB,8vBAYiOH,gBAZjO,wWAiBuED,WAjBvE,kBAiB+FD,WAjB/F,mCAiBwIE,gBAjBxI;;AA4BA,QAAIC,iBAAJ,EAAuB;AACrBG,qDAC+BX,IAD/B;AAED;;AAEGW,sBAEFV,UAFE,SAEYC,SAFZ;;AAOA,WAAOS,KAAP;AACD;AAtEc,CAAjB",
      "file": "goldsmiths.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "module.exports = {\n  \n  generateLatexFile: function(psid, first_name, last_name, student_email, student_number, tuition_fee, amount_days, amount_reimburse, include_signature=true, is_goldsmiths=true) {\n    \n    let uni;\n    if (is_goldsmiths) {\n      uni = 'Goldsmiths University of London';\n    } else {\n      uni = 'your university';\n    }\n    \n    let latex = '\\\\documentclass{letter}\\n\\\\usepackage{hyperref}\\n\\\\usepackage{graphicx}\\n\\\\usepackage{mathtools}\\n'\n\n    latex +=\n`\n\\\\DeclarePairedDelimiter\\\\floor{\\\\lfloor}{\\\\rfloor}\n\n\\\\signature{${first_name} ${last_name}}\n\n`;\n\n    if (is_goldsmiths) {\n      latex += `\\\\address{Warden’s Office \\\\\\\\ Ms Helen Keogh \\\\\\\\ Mr Patrick Loughrey \\\\\\\\ \nDeptford Town Hall Building \\\\\\\\ Room 101 \\\\\\\\ New Cross \\\\\\\\ London, UK \\\\\\\\ \nSE14 6NW \\\\\\\\ 020 7919 7901}\n\n`;\n    }\n    \nlatex += `\\\\longindentation=0pt\n\\\\begin{document}\n\n\\\\begin{letter}{Student Number: ${student_number} \\\\\\\\ Email: ${student_email}}\n\\\\opening{To the Warden's Office}\n\nThis letter is to request reasonable compensation for the loss of lectures and contact time with tutors as a result of the UCU strike action from February 22nd to March 16th.\n\nI, as a student of ${uni}, demand that the institution refund a portion of my tuition, respective to my enrollment status and programme.\n\nDue to the employer’s failure to protect the livelihoods of its staff, the UCU has organized a fourteen day strike, as a means of opposing the recent proposals that would damage the USS pension scheme. Consequently, the student body suffers a loss of critical mentorship and face time with the faculty, most notably in the loss of organized class time such as lectures, tutorials, workshops, and critiques.\n\nConsidering that for the duration of the strike students will not be accessing tuition or crossing the picket line to use Goldsmiths’ facilities, I believe I should be refunded the following amount: \\\\textbf{\\\\textsterling ${amount_reimburse}}\n\nThis amount was derived from the fraction of the days missed due to the strikes, $x$, out of the amount of days in the academic year, $y$, multiplied by the tution fees for this year $z$, which is then floored (rounded down) to the nearest pound sterling.\n\n\\\\begin{equation}\n\\\\floor*{\\\\frac{x}{y}z} = \\\\text{\\\\textsterling} \\\\floor*{\\\\frac{14}{${amount_days}} \\\\times ${tuition_fee}} = \\\\text{\\\\textsterling} ${amount_reimburse}\n\\\\end{equation}\n\nIt is the responsibility of the institution to provide a complete and quality education to each of its students, to the fullest extent and duration that it was advertised. Additionally, I find the institution’s administration to be directly accountable for both the inception and the entire duration of the strike. At any point, the university administration can commit to meaningful negotiation that would fairly address the staff concerns and end the strike. As a result of the rising cost of university tuition, students are burdened by increasing levels of debt. It is irresponsible and unmerited for the university to demand each of its students increase their personal debt for a service that has been denied to them.\n\n\\\\vspace{3em}\n\nSincerely,\n\n`;\n\nif (include_signature) {\n  latex += `\n\\\\includegraphics[height=12em]{${psid}.png}`;\n}\n    \n    latex += `\n\n${first_name} ${last_name}\n\n\\\\end{letter}\n\\\\end{document}`;  \n    \n    return latex;\n  }\n};"
      ]
    },
    "mtime": 1521481584337
  }
}